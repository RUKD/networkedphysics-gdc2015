DONE:

    Don't send angular velocity for hermite (not used)

    Added #ifdef so I could easily bring this back (for example if hermite is working)

    Turn +/-2 frames jitter and 5% packet loss on for linear and hermite interpolation

    5% seems is too much. Seems that 2% is more reasonable.

    Once looking good at 2%, try increasing to 5% but don't use 5% if it is necessary
    to increase the amount of playout delay to compensate.

    Fixed so if no objects exist in object update, it's not pushed to view, otherwise
    simulation resets on missing interpolation snapshot and camera weirds out.

TODO:

    ----------------------------------------------------------------------

    Think hard. Grab a pen and paper, and design how it should work!

    -----------------------------------------------------------------------

    Write article. 

    Leave compression related work for a second article, It will likely make this article too long!

    -----------------------------------------------------------------------




























































    -----------------------------------------------------------------------

    At this point start investigating compression approaches

    -----------------------------------------------------------------------

    Network simulator could have a flag set to actually perform the serialization of packets.

    Should be on by default.

    Clean up code that is manually serializing packets. 

    Let the network simulation do it for us instead. Less code!

    Extend network simulation to keep track of bandwidth send, given
    specific packet header size (eg: 24 bytes).

    -----------------------------------------------------------------------

    First obvious win is if the object is at rest, send one bit
    and don't send lin/ang velocity.

    Many objects are at rest. This is a big win.

    -----------------------------------------------------------------------

    Next compress orientation. It's the biggest (16 bytes).

    Can get it down to 32 bytes pretty easily.

    Smallest three.

    -----------------------------------------------------------------------

    Compress linear and angular velocity.

    Restrict linear and angular velocity to some maximum.

    Can be aggressive with linear velocity because can be bounded tightly.

    Be aggressive with linear/ang velocity resolution. Can synchronize it
    quite roughly. It's not actually used for extrapolation, just interpolation
    so near enough is pretty good!

    -----------------------------------------------------------------------

    Finally... position...

    Bound the position in xy

    Bound position height (z) (i forget?)

    Compress position to 1cm resolution.

    How good is it?

    Can we do better?

    *** I'm thinking this needs two articles ***

    -----------------------------------------------------------------------
