DONE:

TODO:

    Seems like remaining optimizations are clear:

        1. GLM is fucking SHIT
        2. Remove activation system
        3. Optimize view render (eg. don't copy a bunch of stuff)
        4. Run the simulation and render in parallel (e.g one frame behind)

    --------------------------------------------

    My guess is:

        1. Activation system

        2. Stencil shadows

        3. View system (eg. separation of model and view...)

    If it is activation, remove that aspect and simplify.

    If it is stencil shadows, probably a good idea to move those guys
    into the vertex shader (research how!)

    -------------------------------------------

    OpenGL Clear is being called twice.

    This is clearly not efficient. Fix so demos only clear once.

    -------------------------------------------

    There is a bug where the first cube added (bottom left corner)
    is always blue. It probably thinks it is a player owned cube.

    -------------------------------------------

    It would be nice to strip the activation system out entirely. 

    I probably don't need it for anything I reasonably want to do.

    Get the cubes demo working without it. 

    SIMPLIFY

    -------------------------------------------

    Bring across the code to record inputs and playback a demo while recording
    the inputs. 

    Make sure the input record is at the lowest level, eg. so it plays back everything
    including console keys, commands and such.

    Capture some videos of key bits so it can be presented on the website.

    Ideally, convert the videos to GIFs so they auto-play when the website is up.

    Write the article describing the physics simulation

    -------------------------------------------

    Get the cube demo polished up and ready to release (singleplayer)

    -------------------------------------------









    --------------------------------------------------------------

    Explore various different interpolation strategies to use for 2D linear motion.

    Share this demo with Nathan (pro-bono) and try to get some involvement back with their project.

    --------------------------------------------------------------

    Return to PBR rendering

    --------------------------------------------------------------

    Convert DDS loading to use nvImage to load HDR uffizi cubemap.

    Work on exposure and get the scene looking good with HDR, may need to bump up direct light intensity?

    ----------------------------------

    Get roughness working with this HDR cubemap, eg. use roughness to index the mip chain.

    Look into a normalized BRDF function that accepts roughness, eg. microfacet model.

    ----------------------------------

    Get fresnel working so some reflection is visible even on the diffuse stone and more 
    reflection is visible at grazing angles (quite important for realistic go stone visuals)

    ----------------------------------

    Reread Seb Legarde stuff again start to finish.

    http://seblagarde.wordpress.com/2011/08/17/hello-world/

    Dig in a bit deeper into the source material (especially Naty's siggraph talks)
    and understand the math and physical reasoning behind it.

    Start here:

    http://renderwonk.com/publications/s2010-shading-course/hoffman/s2010_physically_based_shading_hoffman_a_notes.pdf

    ----------------------------------

    Continue studying trip through the graphics pipeline.

    ----------------------------------

    Identify areas where my math is weak and work to study those parts.

    Khan Academy? Probably the best bet to start.

    Get a desk so I can study.

    ----------------------------------

    Get go board rendering working

    ----------------------------------

    Render skybox and then in-game, render a cubemap from the center of a stone (size 35?)

    Make sure this cubemap is captured in HDR, eg. pre-tonemapping.

    This cubemap can then be input into CubeMapGen or cmft to get a correct radiance 
    and irradiance cubemap including the go board in the scene, eg. reflected color of the wood.

    ----------------------------------

    Research raytracing signed distance fields for shadows

    ----------------------------------
