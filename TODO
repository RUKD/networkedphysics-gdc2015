DONE:

    Study compression amounts now that the error on angle is fixed

    Now it seems that the most promising direction is the relative
    quaternion option with w inferred.

    (Need to remember flag for +/- w)

TODO:

    Not sure about this.

    The effectiveness depends on the % of orientations that have the same largest component

    And the % of relative quaternions that have w as the largest component

    And the % of relative quaternions that have all components under some max value
    that makes it worthwhile. (Otherwise 10 bits per-component that isn't under the threshold = max 34 bytes)

    I do feel that some gains exist. I think they will be small though. No silver bullet!

    ----------------------------------------------------

    Write out data files: "orientation_data.txt", "position_data.txt"

    Write logic to setup array of objects with # of bits per-axis and per-angle
    to use, and a function to run over the sample data and calculate average #
    of bits per-orientation.

    Sort the output then by the # of bits calculated, and print out the top ten encodings for orientation.

    Just try the simplest thing for now, eg. just want to know if the simple technique is worthwhile
    and what % of bits it saves.

    Once this is done, try to answer more advanced questions:

        - do we need 2 bits to represent smallest two for axis?
        - if we encode smallest 2 bits then we need to encode whether or not it is negative as well
