DONE:

    Measure position deltas in units and accumulate in static buffer. 

    Print out and capture to file.

    Do the same for smallest three a,b,c

    Take quaternion and convert to 10 bit precision and calculate deta (4 component)

    Calculate delta of axis * angle (3 component), quantized to 4096 (+/- 2*pi)

TODO:

    ---------------------------

    Calculate the relative quaternion and calculate the delta of x,y,z from zero, and w from 1.0 (4 component)

    ---------------------------

    Adjust smallest 3 delta such that:

        1. it ignores differences when largest value is changed
        2. I can measure % of largest value changing vs. not
        3. I am ensured that both quaternions are in the same quadrant first (eg. go out to quat, back off, dot, re-encode...)

    ---------------------------

    Write all the files out to the output directory at once, eg. with fopen/fwrite
    so I can be guaranteed that all data is captured from exactly the same simulation
    and is directly comparable.

    ---------------------------

    Gather sample data set from blowing cubes

    ---------------------------

    Now write a ruby script (scripts/delta.rb) to read in the data sets and calculate the output I want, eg. % under n bit buckets for each quantity.

    Post process data according to power of two buckets and print out % that is covered by that bucket

    Do some basic analysis for each type and try to work out which of the quaternion representations are the best.

    Also try to find the best position small vs. large bracket that covers the largest %

    Also try to determine if bits per-component make sense, eg. small, large, absolute bits for x,y,z for position (probably does statistically)

    ---------------------------
