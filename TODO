DONE:

    Setup an instance on Amazon. Picked a compute instance so I can run the
    physics simulation on the dedi there. I'll just have to be careful not
    to leave it running as it could be moderately expensive.

    Choice of linux: Ubuntu.

TODO:

    ------------------------------

    Get some font rendering stuff working in OpenGL.

    Use "fonts for code" from here: http://input.fontbureau.com

    Implement a quake style console.

    Redirect stdout and stderr output to the console.

    I very much like the idea of creating a tool that spits out textures
    from a truetype font, so I don't have to link to freetype. This is the way (tm)

    http://content.gpwiki.org/index.php/OpenGL:Tutorials:Font_System

    ------------------

    Learn how to use chef/knife to setup the linux server properly with all
    the stuff I want automatically, vs. manually configuring it. eg. git,
    GCC and all that.

    Get the server loop setup properly. Server needs to update game and then sleep
    until time has elapsed for next frame. I think I have this code available
    from previous projects. Resurrect it.

    Find a nifty way with scripts to update the server on request, or automatically
    when git is checked in.

    Get the client/server workflow really tight!

    ------------------------------

    Add concept of console commands and console variables

    Hook up concept of client and server side console commands / convars

    Work out how to transmit these to the client on initial connect
    and then on each change.

    ------------------------------

NOTES:

    ---------------------------

    It's annoying and complicated to create a game server.

    It's really nice that it's completely configurable,
    but the config being passed in to the constructor makes it
    difficult to create a derived class that just creates how
    it wants to.

    Maybe an init method would be a better idea? Even if it's internal...

    I really want the game client and server to be self contained, eg. own all objects they use

    ---------------------------

    I want the client to have callbacks for pretty much everything that happens, eg. 
    te be able to get callbacks on client connect, disconnect, to be able to override
    packet receives (eg. process more packet types) and so on.

    ---------------------------

    The network simulator is coded in such a way that it is annoying to use
    for a real application. I don't want it to randomly cycle between settings
    automatically. I want the user to be able to choose between a series of presets.

    ---------------------------

    It's really annoying not being able to create an address passing in dynamic port,
    eg. Address( "::1", ServerPort ) should be a thing.
    
    ---------------------------

    Client connect takes over 1 second. Optimize!

    ---------------------------