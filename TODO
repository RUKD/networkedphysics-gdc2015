DONE:

    Sketched out cube data with index for packet.

    Implement packet serialize fn. with per-cube index and serialize of position, orientation, lin/ang velocity.

    Implemented at rest flag.

TODO:

    Each frame before simulate pull all state from simulation, quantize it, clamp position, linear velocity, angular velocity.

    This quantized state is where the cube state that fills the packet with n most important comes from.

    Then push this quantized state back to simulation and run sim frame.

    Determine if precision needs to be higher with quantize.

    Hopefully not, but if it does some structural changes need to be made.

    -------------------------------------------------------------------------

    Implement priority bubble up, pull, push.

    Send packet from left to right containing cube state.

    When this packet arrives print to make sure it's being received.

    -------------------------------------------------------------------------

    Implement jitter buffer. Just delay just enough to handle jitter (just over two frames)

    Add code so the sim doesn't run on the right until the first packet comes in.

    Set remote input to input in packet.

    Set right side time to frame # in packet (does it need to be sent or can it be inferred from sequence?)

    Push state to right side sim.

    -------------------------------------------------------------------------

    Encode position relative to center quantized integer point.

    Output the data set and optimize the encoding (single var most likely).

    Maybe try multiple var two-level encoding?

    -------------------------------------------------------------------------

    Implement error reduction for position (smoothing)

    -------------------------------------------------------------------------

    Implement error reduction for orientation (smoothing)

    -------------------------------------------------------------------------

    Might be cool to have a fake lag switch when you press a button,
    eg. no packets come through for one second.

    Will be a cool visual demonstration of how the stateful sync works,
    and recovers from errors (like errors in a video stream...)

    -------------------------------------------------------------------------

    Write stateful synchronization article

    -------------------------------------------------------------------------

    Write conclusion article (pros/cons of each technique) ---> SHORT

    Need this because I need the arc of conclusion for the GDC talk.

        1. The simulation

        2. Deterministic lockstep

        3. Snapshots and interpolation (plus compression)

        4. Stateful synchronization

        5. Conclusion: Pros/cons of each approach

        6. Good question time ideally: latency hiding, client/server, implementation details etc.

    -------------------------------------------------------------------------

    Make a list of diagrams that need to be created.

    Sketch out the diagrams roughly with pencil/paper.

    Once the basic outline is working hand over to Chantel to create the diagrams w. illustrator.

    Finish slides for GDC.

    -------------------------------------------------------------------------

    Implement javascript to pause video when it is not currently visible

    -------------------------------------------------------------------------