DONE:

TODO:

    ---------------------------

    Now write a ruby script (scripts/delta.rb) to read in the data sets and calculate the output I want, eg. % under n bit buckets for each quantity.

    Post process data according to power of two buckets and print out % that is covered by that bucket

    Do some basic analysis for each type and try to work out which of the quaternion representations are the best

    Work out how to render graphs of the histograms from inside ruby

    ----------------------------
























    ---------------------------

    Measure frequency of smallest three having the same largest component vs. having a different largest component

    ---------------------------

    Measure frequency of quaternion difference having w component larger than the others

    ---------------------------

    Adjust smallest 3 delta such that:

        1. it ignores differences when largest value is changed
        2. I can measure % of largest value changing vs. not
        3. I am ensured that both quaternions are in the same quadrant first (eg. go out to quat, back off, dot, re-encode...)

    ---------------------------

    Gather sample data set from blowing cubes

    ---------------------------


    Also try to find the best position small vs. large bracket that covers the largest %

    Also try to determine if bits per-component make sense, eg. small, large, absolute bits for x,y,z for position (probably does statistically)

    ---------------------------
