DONE:

    Sketch out bit array class.

    Implement bit array class.

    Unit test the bit array class.

    Rename SlidingWindow<T> to NetworkBuffer<T>

    Rename RingBuffer<T> to SlidingWindow<T>

TODO:

    Rework the NetworkBuffer<T> with hold/cold split.

    Rename NetworkBuffer<T> to SequenceBuffer<T>. More descriptive.

    -----------------------------------------------------------------------

    It seems that other tests are not running. eg. connection, client/server?!

    -----------------------------------------------------------------------

    Copy playout delay buffer and call it SnapshotInterpolationBuffer

    Derive it from new network buffer.

    -----------------------------------------------------------------------

    Get linear interpolation working @ 10pps

    -----------------------------------------------------------------------

    Get hermite interpolation working @ 10pps

    Note: Need to send linear and angular velocity for this one!

    This should be noticeably higher quality than linear interpolation.

    It has to be to justify the extra velocity bandwidth.

    -----------------------------------------------------------------------




























    -----------------------------------------------------------------------

    At this point start investigating compression approaches

    -----------------------------------------------------------------------

    Network simulator could have a flag set to actually perform the serialization of packets.

    Should be on by default.

    Clean up code that is manually serializing packets. 

    Let the network simulation do it for us instead. Less code!

    Extend network simulation to keep track of bandwidth send, given
    specific packet header size (eg: 24 bytes).

    -----------------------------------------------------------------------

    First obvious win is if the object is at rest, send one bit
    and don't send lin/ang velocity.

    Many objects are at rest. This is a big win.

    -----------------------------------------------------------------------

    Next compress orientation. It's the biggest (16 bytes).

    Can get it down to 32 bytes pretty easily.

    Smallest three.

    -----------------------------------------------------------------------

    Compress linear and angular velocity.

    Restrict linear and angular velocity to some maximum.

    Can be aggressive with linear velocity because can be bounded tightly.

    Be aggressive with linear/ang velocity resolution. Can synchronize it
    quite roughly. It's not actually used for extrapolation, just interpolation
    so near enough is pretty good!

    -----------------------------------------------------------------------

    Finally... position...

    Bound the position in xy

    Bound position height (z) (i forget?)

    Compress position to 1cm resolution.

    How good is it?

    Can we do better?

    *** I'm thinking this needs two articles ***

    -----------------------------------------------------------------------


    




    -------------------------------------------

    Would be great to be able to quickly define a packet factory with macros.

    It's all very boilerplate. Annoying to cut & paste code it each time.

    Pass over all packet factories and convert to use the macros!

    --------------------------------------------
