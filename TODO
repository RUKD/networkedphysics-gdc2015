DONE:

    Render this using debug text showing the amount of bandwidth

    If the amount is greater than 512kbps then display as megabits, eg. 0.5 megabits and above

    Add smoothing to the bandwidth

    Maximum rotation speed appears to not be working for the cube rolling,
    getting shortest path twists with compression 5.

    Reduced maximum angular speed from 20 to 15.

TODO:

    I am getting a fluctuating bandwidth reading.

    I believe this is because I'm getting at 10pps calculations with one packet
    dropping off the end.

    To fix I should calculate average bandwidth over the last n entries, where
    n is the size of the sliding window.

    I will set this size to 256.

    -----------------------------------------------------------------------

    Extend to a graph of packet size, on each packet recieved a new
    entry is added to this graph (eg. like net graph 3)

    Visualize this graph bottom middle of screen in light blue

    -----------------------------------------------------------------------

    Bound the position on the left side so it doesn't go outside of xy and z bounds

    Generalize serialize compressed vector to take a vector min/max argument

    Send position compressed within separate bounds for xy and z (0,max height)

    ----------------------------------------------------------------------

    Delta encoding.

    On left side buffer snapshots indexed by sequence #

    Right side keep track of most recent snapshot sequence # received
    (I believe the sequence buffer does this for us...)

    Right side send ack packets back to left side, if snapshots received
    that frame, with sequence # of most recent snapshot received.

    Left side keep track of most recent ack from right side in sequence #

    -------------------------------------------------------------------------

    Now when sending snapshots from left -> right, encode relative to base 
    snapshot # (pass base # and pointer to snapshot buffer into packet...)

    On serialize write, compare each object against base.

    If object is identical write one bit 0 indicating it has not changed.

    -----------------------------------------------------------------------

    Next, do the math. 

    Cost of indexing only the changed set of objects vs. 900 bits for yes/no.

    Write function to determine which approach is the best encoding,
    given the # of different cubes, vs. the # of total cubes.

    Extend the serialize function to use this encoding.

    -----------------------------------------------------------------------

    Next sort the cubes in order of id.

    Now write the cubes using a variable bit encoding for delta id.

    Is this effective?

    -----------------------------------------------------------------------

    Now encode position relative to previous position

    -----------------------------------------------------------------------

    Encode orientation relative to previous orientation

    -----------------------------------------------------------------------

    Encode linear velocity relative to previous linear velocity

    -----------------------------------------------------------------------

    Ready to write next article

    -----------------------------------------------------------------------