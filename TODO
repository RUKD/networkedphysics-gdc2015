DONE:

TODO:

    Split client and server into their own libraries: "client" and "server"?

    (Should client and server themselves be split up? I don't know...)

    Potentially create new "shared" library (common to client and server)

    Move client/server tests out of protocol so they can be iterated on independently

    eg: tests/client_server

    ---------------------------------------------------------------

    Add new "cubes" demo, eg. "load cubes"

    Add command line parsing to pass into console, eg. "+demo cubes" should load cubes demo

    Implement premake rules: "pm cubes" and "pm stones" so I can iterate quickly on demos.

    Get the singleplayer cube working with updated rendering

    If no command line args passed to console, default to starting with console open

    --------------------------------------------------------------

    Implement an "interpolation" demo for Nathan Lazur, eg: "load interpolation"

    Add a premake shortcut, eg: "pm interpolation" or "pm lerp" for fast iteration.

    Explore various different interpolation strategies to use for 2D linear motion.

    --------------------------------------------------------------

    Return to PBR rendering

    --------------------------------------------------------------


















    ----------------------------------

    Convert DDS loading to use nvImage to load HDR uffizi cubemap.

    Work on exposure and get the scene looking good with HDR, may need to bump up direct light intensity?

    ----------------------------------

    Get roughness working with this HDR cubemap, eg. use roughness to index the mip chain.

    Look into a normalized BRDF function that accepts roughness, eg. microfacet model.

    ----------------------------------

    Get fresnel working so some reflection is visible even on the diffuse stone and more 
    reflection is visible at grazing angles (quite important for realistic go stone visuals)

    ----------------------------------

    Reread Seb Legarde stuff again start to finish.

    http://seblagarde.wordpress.com/2011/08/17/hello-world/

    Dig in a bit deeper into the source material (especially Naty's siggraph talks)
    and understand the math and physical reasoning behind it.

    Start here:

    http://renderwonk.com/publications/s2010-shading-course/hoffman/s2010_physically_based_shading_hoffman_a_notes.pdf

    ----------------------------------

    Continue studying trip through the graphics pipeline.

    ----------------------------------

    Identify areas where my math is weak and work to study those parts.

    Khan Academy? Probably the best bet to start.

    Get a desk so I can study.

    ----------------------------------

    Get go board rendering working

    ----------------------------------

    Render skybox and then in-game, render a cubemap from the center of a stone (size 35?)

    Make sure this cubemap is captured in HDR, eg. pre-tonemapping.

    This cubemap can then be input into CubeMapGen or cmft to get a correct radiance 
    and irradiance cubemap including the go board in the scene, eg. reflected color of the wood.

    ----------------------------------

    Research raytracing signed distance fields for shadows

    ----------------------------------
