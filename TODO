DONE:

TODO:

    -----------------------------------------------------------------------

    Can we do even better? If the average position change is smaller than
    the cell size in RTT (it is), then we can recognize this and encode
    that smaller.

    Lets say cell size is large (4 meters sq)

    eg. if has moved 25cm-50cm or less then can encode with much less bits

    If this is a common case, this is a big win for moving cubes.

    Ideally, come up with some technique to determine the average position
    difference, maybe even graph the distribution while the game is running
    at a given RTT.

    This would make a cool diagram.

    -----------------------------------------------------------------------

    Encode orientation relative to previous orientation

    If the orientation is different but within 10 degrees, or 0.1 units linear
    or something, encode with much less bits, otherwise just serialize absolute
    quaternion smallest 3.

    -----------------------------------------------------------------------

    Ready to write "Snapshot Compression" article

    -----------------------------------------------------------------------
