DONE:

TODO:

    -------------------------------------------------------------------------

    Output the data set for cube positions relative to player position

    Format for text should be x,y,z,player_x,player_y,player_z

    Optimize the position relative to player cube center (two var: xy, z)

    Implement encoding with this optimal # of bits for xy and z.

    -------------------------------------------------------------------------

    Actually implement serialize measure before cube packet write, so cubes
    perfectly fit into the allowed # of bytes and we hit requested bandwidth
    exactly.

    Make sure serialize measure considers center point for position compression

    -------------------------------------------------------------------------

    Make sure we meet the bandwidth expectations exactly.

    If the bandwidth is under then pad with zeros (just send packet of perfect size...)

    -------------------------------------------------------------------------

    Would be very nice to have a button that when pressed disables packets for 1 second.

    This way state recovery in a katamari could be demonstrated. This would make a great video!

    Want a video of this without smoothing, and with smoothing.

    -------------------------------------------------------------------------

    Implement error reduction for position (smoothing)

    Implement error reduction for orientation (smoothing)

    Maybe demonstrate difference between local space smoothing (error reduction)
    vs. lagging world space smoothing (following spring...)

    Get video with smoothing to demonstrate

    -------------------------------------------------------------------------

    Write stateful synchronization article

    -------------------------------------------------------------------------

    Write conclusion article (pros/cons of each technique) ---> SHORT

    Need this because I need the arc of conclusion for the GDC talk.

        1. The simulation

        2. Deterministic lockstep

        3. Snapshots and interpolation

            *** snapshot compression worked example ***

        4. Stateful synchronization

        5. Conclusion: Pros/cons

        6. Question time: latency hiding, client/server, implementation details etc.

    -------------------------------------------------------------------------

    Make a list of diagrams that need to be created.

    Sketch out the diagrams roughly with pencil/paper.

    Once the basic outline is working hand over to Chantel to create the diagrams w. illustrator.

    Finish slides for GDC.

    -------------------------------------------------------------------------

    Implement javascript to pause video when it is not currently visible

    -------------------------------------------------------------------------
