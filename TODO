DONE:

TODO:

    Center the bandwidth text at the top of the screen

    -----------------------------------------------------------------------

    Bound the position on the left side so it doesn't go outside of xy and z bounds

    Generalize serialize compressed vector to take a vector min/max argument

    Send position compressed within separate bounds for xy and z (0,max height)

    -----------------------------------------------------------------------

    Need to widen out the sliding window to say 256 entries so I have something to render

    Then I need to take only the most recent n in the window for avg. bandwidth calc,
    while having the history for say 256 for rendering packet size histogram.

    Visualize graph of packet in light blue, one vertical line per-packet.

    ----------------------------------------------------------------------

    Delta encoding.

    On left side buffer snapshots indexed by sequence #

    Right side keep track of most recent snapshot sequence # received
    (I believe the sequence buffer does this for us...)

    Right side send ack packets back to left side, if snapshots received
    that frame, with sequence # of most recent snapshot received.

    Left side keep track of most recent ack from right side in sequence #

    -------------------------------------------------------------------------

    Now when sending snapshots from left -> right, encode relative to base 
    snapshot # (pass base # and pointer to snapshot buffer into packet...)

    On serialize write, compare each object against base.

    If object is identical write one bit 0 indicating it has not changed.

    -----------------------------------------------------------------------

    Next, do the math. 

    Cost of indexing only the changed set of objects vs. 900 bits for yes/no.

    Write function to determine which approach is the best encoding,
    given the # of different cubes, vs. the # of total cubes.

    Extend the serialize function to use this encoding.

    -----------------------------------------------------------------------

    Next sort the cubes in order of id.

    Now write the cubes using a variable bit encoding for delta id.

    Is this effective?

    -----------------------------------------------------------------------

    Now encode position relative to previous position

    -----------------------------------------------------------------------

    Encode orientation relative to previous orientation

    -----------------------------------------------------------------------

    Encode linear velocity relative to previous linear velocity

    -----------------------------------------------------------------------

    Ready to write next article

    -----------------------------------------------------------------------