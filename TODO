DONE:

TODO:

    Split apart quantize linear velocity option and at rest into two separate modes.

    Work out how many bits are used for serializing linear velocity @ 20pps
    eg. hack up the linear quantize manually with # of bits by converting
    explicitly to integer.

    ---------------------------

    Implement function to count # of bits to send relative indices.

    Compare this with skip bits (900) and determine which of the two
    approaches to use dynamically on serialize write.

    Determine statistically (printf) what the average # of changed cubes
    can be per-packet before switching to skip bits.

    If # of changed cubes is > max, then fallback to skip bits even if indices more efficient.

    ---------------------------

    Upgrade bandwidth exp smoothed moving average so it pumps
    in a framerate independent way, eg. so bandwidth estimate
    is as tight at 10pps as it is at 60pps.

    May need to add a packet send rate to the simulator config, or an adjustable tightness (hack)

    Probably going to go with tightness hand - tuned.

    ---------------------------

    Need to add quantized linear velocity to quantized cube state, and for demos
    that don't send the linear velocity need to make sure it is cleared always
    so operator == still works.

    Implement 20pps version of simulation with delta encoded linear velocity

    Should be signifinantly reduced bandwidth. I would hope sub 100kbps.

    ---------------------------

    Implement 3 snapshots per-packet redundant version with relative encoding

    Start with the oldest snapshot and encode the two next ones, this way
    the start snapshot is closer to the baseline.

    Then reduce playout delay buffer to 66ms.

    Even with 10% packet loss this should work fine with the small playout delay.

    In effect, we have traded a bit of extra bandwidth to compensate for packet loss,
    reducing the amount of playout delay buffer that is required (without the redundant sends,
    playout delay is used to compensate for packet loss...)

    ---------------------------
