{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"model",
				"modelViewProjection"
			],
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"last",
				"lastConnectedClientTime"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			],
			[
				"datablock",
				"dataBlockReceiver"
			],
			[
				"ClientServerDatABlock",
				"ClientServerDataBlockSender"
			],
			[
				"ClientSer",
				"ClientServerDataBlockSender"
			],
			[
				"test_",
				"test_data_block_send_and_receive_packet_loss"
			],
			[
				"CLIENT_STATE_SENDING",
				"CLIENT_STATE_SENDING_CLIENT_DATA"
			],
			[
				"UpdatESend",
				"UpdateSendClientData"
			],
			[
				"read",
				"readyForConnection"
			],
			[
				"SERVER",
				"SERVER_CLIENT_STATE_READY_FOR_CONNECTION"
			],
			[
				"max",
				"maxServerDataSize"
			],
			[
				"fargmen",
				"fragmentId"
			],
			[
				"ack",
				"ackedFragment"
			],
			[
				"CLIENH_",
				"CLIENT_SERVER_PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_RECEIVING_SERVER_DATA"
			],
			[
				"m_num",
				"m_numServerDataFragments"
			],
			[
				"CLIENT_",
				"CLIENT_SERVER_PACKET_CONNECTION"
			],
			[
				"CreateChann",
				"CreateChannelDataInternal"
			],
			[
				"NUM",
				"NUM_CLIENT_SERVER_PACKETS"
			],
			[
				"PROTOCOL_",
				"PROTOCOL_USE_RESOLVER"
			],
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"client",
				"clientNetworkInterface"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/C++11 (Client).sublime-build",
	"command_palette":
	{
		"height": 107.0,
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/git/protocol"
	],
	"file_history":
	[
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.h",
		"/Users/gaffer/git/protocol/src/Game/Game.cpp",
		"/Users/gaffer/git/protocol/src/Game/Global.h",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.cpp",
		"/Users/gaffer/git/protocol/src/Game/InputManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.h",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/data/shaders/Cubes.vert",
		"/Users/gaffer/git/protocol/src/Cubes/Config.h",
		"/Users/gaffer/git/protocol/src/Cubes/Game.h",
		"/Users/gaffer/git/protocol/src/Game/GameMessages.h",
		"/Users/gaffer/git/protocol/src/Game/InputManager.h",
		"/Users/gaffer/git/protocol/GOALS",
		"/Users/gaffer/git/protocol/src/Game/Global.cpp",
		"/Users/gaffer/git/protocol/src/Game/Render.cpp",
		"/Users/gaffer/git/protocol/external/nvImage/rgbe.c",
		"/Users/gaffer/git/protocol/src/Game/RecordingManager.h",
		"/Users/gaffer/git/protocol/Protocol.make",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/src/Game/CubesDemo.cpp",
		"/Users/gaffer/git/protocol/untitled",
		"/Users/gaffer/git/protocol/src/Cubes/Mathematics.h",
		"/Users/gaffer/git/protocol/src/Cubes/View.cpp",
		"/Users/gaffer/git/protocol/external/vectorial/mat4f.h",
		"/Users/gaffer/git/protocol/src/Cubes/ViewObject.h",
		"/Users/gaffer/git/protocol/src/Cubes/View.h",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.cpp",
		"/Users/gaffer/git/protocol/tests/Core/TestCore.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/SoakProtocol.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestConnection.cpp",
		"/Users/gaffer/git/protocol/assets/Fonts/AnonymousProMinus/README.txt",
		"/Users/gaffer/git/protocol/src/Core/Allocator.h",
		"/Users/gaffer/git/protocol/Core.make",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/DemoManager.d",
		"/Users/gaffer/git/protocol/src/Game/GameChannelStructure.h",
		"/Users/gaffer/git/protocol/src/Game/CubesDemo.h",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.h",
		"/Users/gaffer/git/protocol/src/Game/StoneDemo.h",
		"/Users/gaffer/git/protocol/src/Game/Demo.h",
		"/Users/gaffer/git/protocol/src/Game/StoneDemo.cpp",
		"/Users/gaffer/git/protocol/src/Game/InterpolationDemo.h",
		"/Users/gaffer/git/protocol/src/Game/InterpolationDemo.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Hypercube.h",
		"/Users/gaffer/git/protocol/src/Cubes/Cubes.h",
		"/Users/gaffer/git/protocol/tests/Cubes/TestCubes.cpp",
		"/Users/gaffer/git/protocol/Cubes.make",
		"/Users/gaffer/git/protocol/src/Core/Hash.h",
		"/Users/gaffer/git/protocol/src/Game/Render.h",
		"/Users/gaffer/git/protocol/tests/Protocol/TestDataBlockSendAndReceive.cpp",
		"/Users/gaffer/git/protocol/src/Network/Interface.h",
		"/Users/gaffer/git/protocol/src/VirtualGo/InertiaTensor.h",
		"/Users/gaffer/git/protocol/data/shaders/Stone.vert",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.cpp",
		"/Users/gaffer/git/protocol/tools/Stone/ToolMesh.cpp",
		"/Users/gaffer/git/protocol/data/shaders/Debug.vert",
		"/Users/gaffer/git/protocol/WOULD BE NICE",
		"/Users/gaffer/git/protocol/PBR",
		"/Users/gaffer/git/protocol/src/Core/Types.h",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestChannelStructure.h",
		"/Users/gaffer/git/protocol/build/obj/x64/Release/Client/MeshManager.d",
		"/Users/gaffer/git/protocol/data/shaders/Cubes.frag",
		"/Users/gaffer/git/protocol/src/Protocol/Object.h",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/Util.d",
		"/Users/gaffer/git/cubes/client/Render.cpp",
		"/Users/gaffer/git/protocol/tests/VirtualGo/TestVirtualGo.cpp",
		"/Users/gaffer/git/protocol/assets/CubeMaps/grace-new.hdr",
		"/Users/gaffer/git/protocol/src/Game/Console.cpp",
		"/Users/gaffer/git/protocol/data/shaders/Debug.frag",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/GameClient.d",
		"/Users/gaffer/git/protocol/assets/CubeMaps/doge2.hdr",
		"/Users/gaffer/git/protocol/src/ClientServer/Server.cpp",
		"/Users/gaffer/git/protocol/data/shaders/Shadow.frag",
		"/Users/gaffer/git/protocol/build/Server.make",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerEnums.h",
		"/Users/gaffer/git/protocol/data/shaders/Shadow.vert",
		"/Users/gaffer/git/protocol/src/Game/Model.cpp",
		"/Users/gaffer/git/protocol/src/Game/Model.h",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.h",
		"/Users/gaffer/git/protocol/data/shaders/Flat.vert",
		"/Users/gaffer/git/protocol/data/shaders/Console.frag",
		"/Users/gaffer/git/protocol/src/Game/ShaderManager.cpp",
		"/Users/gaffer/git/protocol/build/SoakProtocol.make",
		"/Users/gaffer/git/protocol/build/StoneTool.make",
		"/Users/gaffer/git/protocol/src/Game/MeshManager.cpp",
		"/Users/gaffer/git/protocol/src/VirtualGo/CollisionResponse.h",
		"/Users/gaffer/git/protocol/src/Protocol/ReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/Model.d",
		"/Users/gaffer/git/cubes/shared/Game.h",
		"/Users/gaffer/git/cubes/demos/Demo.h",
		"/Users/gaffer/git/cubes/shared/Simulation.cpp",
		"/Users/gaffer/git/cubes/shared/Game.cpp",
		"/Users/gaffer/git/cubes/shared/Engine.cpp",
		"/Users/gaffer/git/cubes/shared/Activation.cpp",
		"/Users/gaffer/git/cubes/shared/ViewObject.h",
		"/Users/gaffer/git/cubes/shared/Simulation.h",
		"/Users/gaffer/git/cubes/shared/Mathematics.h",
		"/Users/gaffer/git/cubes/shared/Engine.h",
		"/Users/gaffer/git/cubes/shared/Cubes.h",
		"/Users/gaffer/git/cubes/shared/Config.h",
		"/Users/gaffer/git/cubes/shared/Activation.h",
		"/Users/gaffer/git/protocol/src/Game/Font.cpp",
		"/Users/gaffer/git/cubes/shared/Hypercube.h",
		"/Users/gaffer/git/cubes/demos/SingleplayerDemo.h",
		"/Users/gaffer/git/protocol/data/shaders/Default.frag",
		"/Users/gaffer/git/protocol/src/Game/GameClient.cpp",
		"/Users/gaffer/git/protocol/data/shaders/CubesLit.vert",
		"/Users/gaffer/git/protocol/data/fonts/FPS.font",
		"/Users/gaffer/git/protocol/data/shaders/CubesLit.frag",
		"/Users/gaffer/git/protocol/tools/Stone/StoneTool.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/TestNetwork/TestNetwork.d",
		"/Users/gaffer/git/protocol/data/shaders/CubeUnlit.vert",
		"/Users/gaffer/git/protocol/data/shaders/CubeUnlit.frag",
		"/Users/gaffer/git/protocol/src/Game/Util.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/ProtocolEnums.h",
		"/Users/gaffer/git/protocol/build/Client.make",
		"/Users/gaffer/git/protocol/ClientServer.make",
		"/Users/gaffer/git/protocol/data/shaders/CubeLit.frag",
		"/Users/gaffer/git/protocol/assets/CubeMaps/glacier.hdr",
		"/Users/gaffer/git/protocol/data/shaders/CubeLit.vert",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.h",
		"/Users/gaffer/git/protocol/data/shaders/CubeDebug.vert",
		"/Users/gaffer/git/protocol/data/shaders/CubeDebug.frag",
		"/Users/gaffer/git/protocol/data/shaders/Flat.frag",
		"/Users/gaffer/git/protocol/data/shaders/Stone.frag"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"game_init",
			"srand",
			"GameInput",
			"gameInput",
			"Input",
			"4 * 1024",
			"MaxPlayers",
			"NETHACK",
			"nethack",
			"NETHACK",
			"pull",
			"        float r,g,b,a;\npull",
			"math::",
			"authorityOverride",
			"getAuthorityColor",
			"blend_time",
			"getAuthorityColor",
			"math::slerp",
			"CubeInstance",
			"RenderCubes",
			".load",
			"map<",
			"ActivationArea",
			"Cubes",
			"alpha",
			"RenderCubes",
			"        view::Cubes cubes;\n::EaseIn",
			"ExtrapolateObjects",
			"getViewObjectUpdates",
			"mergeViewObject",
			"mergeViewObjectSets",
			"visualOrientation",
			"previousLinearVelocity",
			"algorithm",
			"sort",
			"ExtrapolateObjects",
			"Cubes.h",
			"Cube.h",
			"#include \"Cube.h\"",
			"irty",
			"dirty",
			"AddCube",
			"QuantizedObject",
			"authorityTime",
			"RenderCubeSha",
			"ExtrapolateObjects",
			"dHashSpaceCreate",
			"dHashSpaceCrceate",
			"Shadows",
			"15",
			"8",
			"glfw",
			".space",
			".z",
			"ColorChangeTightnessDefault",
			"interpolationMode",
			"InterpolationMode",
			"ColorChangeTightness",
			"getAuthorityColor",
			"glDepthFunc",
			"SetLight",
			"getAuthorityColor",
			"SetLightPosition",
			"orth",
			"Depth",
			"STENCIL",
			"mask_vao",
			"orth",
			"Ortho",
			"DebugVeretx",
			"::Initialize",
			"shadow_vao",
			"getAuthorityColor",
			"vectorial",
			"ShadowVertex",
			"MaxConsoleVertices",
			"::Initialize",
			"~RenderInterface",
			"todo:",
			"vertices",
			"struct Cube",
			"Cube & ",
			"RenderActivationArea",
			"getAuthorityColor",
			"SHADOWS",
			"LETTERBOX",
			"MaxViewObjects",
			"g = ",
			"r = ",
			"SetLightPosition",
			"lightPosition",
			"numCubes",
			"color",
			"camera.position",
			"lightPosition",
			"\"EyePosition\"",
			"Uniform",
			"::Initialize",
			"Render",
			"Initialize()",
			"BeginScene",
			"Render()",
			"Initialize()",
			"shader = ",
			"BeginLit",
			"GL_QUADS",
			"GL_TRIANGLES",
			"RenderCubes",
			"GameWorker",
			"GameWorkerThread",
			"GameWorker",
			"GameWorkerThread",
			"        gameInstance->GetViewPacket( viewPacket );\nGameWorkerThread",
			"GameWorkerThread",
			"WorkerThread",
			"viewPacket",
			"RenderCubes",
			"numCubes",
			"RenderCubes",
			"Render()",
			"RenderCubes",
			"Buffer",
			"RenderInterface",
			"Initialize()",
			"BeginLit",
			"Initialize(",
			"BaseColor",
			"\"Stone\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 389.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"changes",
				"CHANGES"
			],
			[
				"todo",
				"TODO"
			],
			[
				"command",
				"src/Game/CommandLine.h"
			],
			[
				"commandline.cpp",
				"src/Game/CommandLine.cpp"
			],
			[
				"game.cpp",
				"src/Game/Game.cpp"
			],
			[
				"inputmanager.cpp",
				"src/Game/InputManager.cpp"
			],
			[
				"replaymanager.cpp",
				"src/Game/ReplayManager.cpp"
			],
			[
				"replaymanager.h",
				"src/Game/ReplayManager.h"
			],
			[
				"global.h",
				"src/Game/Global.h"
			],
			[
				"repl",
				"src/Game/ReplayManager.h"
			],
			[
				"input",
				"src/Game/InputManager.h"
			],
			[
				"cubesdemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"game.h",
				"src/Cubes/Game.h"
			],
			[
				"view.cpp",
				"src/Cubes/View.cpp"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"view.h",
				"src/Cubes/View.h"
			],
			[
				"mat4f.h",
				"external/vectorial/mat4f.h"
			],
			[
				"cubedemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"cubes.h",
				"src/Cubes/Cubes.h"
			],
			[
				"cube.h",
				"src/Cubes/Cubes.h"
			],
			[
				"",
				"src/Cubes/Hypercube.h"
			],
			[
				"hype",
				"src/Cubes/Hypercube.h"
			],
			[
				"hy",
				"src/Cubes/Hypercube.h"
			],
			[
				"interpolationdemo.cpp",
				"src/Game/InterpolationDemo.cpp"
			],
			[
				"interpolationdemo.h",
				"src/Game/InterpolationDemo.h"
			],
			[
				"stonedemo.cpp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"stonedemo.h",
				"src/Game/StoneDemo.h"
			],
			[
				"demomanager.h",
				"src/Game/DemoManager.h"
			],
			[
				"cubedemo.h",
				"src/Game/CubesDemo.h"
			],
			[
				"demo.h",
				"src/Game/Demo.h"
			],
			[
				"cubedemo",
				"src/Game/CubesDemo.cpp"
			],
			[
				"wouldbe",
				"WOULD BE NICE"
			],
			[
				"would",
				"WOULD BE NICE"
			],
			[
				"cubes.frag",
				"data/shaders/Cubes.frag"
			],
			[
				"wouldbenice",
				"WOULD BE NICE"
			],
			[
				"config.h",
				"src/Cubes/Config.h"
			],
			[
				"console.cpp",
				"src/Game/Console.cpp"
			],
			[
				"debug.vert",
				"data/shaders/Debug.vert"
			],
			[
				"server.cpp",
				"src/ClientServer/Server.cpp"
			],
			[
				"shadow.frag",
				"data/shaders/Shadow.frag"
			],
			[
				"shadow.vert",
				"data/shaders/Shadow.vert"
			],
			[
				"model.cpp",
				"src/Game/Model.cpp"
			],
			[
				"activation.cpp",
				"src/Cubes/Activation.cpp"
			],
			[
				"config",
				"src/Cubes/Config.h"
			],
			[
				"activation.h",
				"src/Cubes/Activation.h"
			],
			[
				"view",
				"src/Cubes/View.h"
			],
			[
				"cubes",
				"data/shaders/Cubes.vert"
			],
			[
				"model.h",
				"src/Game/Model.h"
			],
			[
				"mesh.cpp",
				"src/Game/MeshManager.cpp"
			],
			[
				"font.cpp",
				"src/Game/Font.cpp"
			],
			[
				"cubeslit.vert",
				"data/shaders/CubesLit.vert"
			],
			[
				"cubeslit.frag",
				"data/shaders/CubesLit.frag"
			],
			[
				"meshmanager.cpp",
				"src/Game/MeshManager.cpp"
			],
			[
				"stone.cp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"client.cpp",
				"src/ClientServer/Client.cpp"
			],
			[
				"mathem",
				"src/Cubes/Mathematics.h"
			],
			[
				"cubeunlit.vert",
				"data/shaders/CubeUnlit.vert"
			],
			[
				"cubelit.vert",
				"data/shaders/CubeLit.vert"
			],
			[
				"cubelit.frag",
				"data/shaders/CubeLit.frag"
			],
			[
				"flat.vert",
				"data/shaders/Flat.vert"
			],
			[
				"cube.vert",
				"data/shaders/Cube.vert"
			],
			[
				"stone.frag",
				"data/shaders/Stone.frag"
			],
			[
				"stone",
				"data/shaders/Stone.vert"
			],
			[
				"render.h",
				"src/Cubes/Render.h"
			],
			[
				"render.cpp",
				"src/Cubes/Render.cpp"
			],
			[
				"stone.cpp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"gameclient.h",
				"src/Game/GameClient.h"
			],
			[
				"gameclient.cpp",
				"src/Game/GameClient.cpp"
			],
			[
				"stonemanager.h",
				"src/Game/StoneManager.h"
			],
			[
				"stonemanager.cpp",
				"src/Game/StoneManager.cpp"
			],
			[
				"inputmanager.h",
				"src/Game/InputManager.h"
			],
			[
				"cubes.c",
				"src/Game/CubesDemo.cpp"
			],
			[
				"cubesdemo.h",
				"protocol/src/game/CubesDemo.h"
			],
			[
				"console.h",
				"protocol/src/game/Console.h"
			],
			[
				"commandline.h",
				"protocol/src/game/CommandLine.h"
			],
			[
				"demomanager.cpp",
				"protocol/src/game/DemoManager.cpp"
			],
			[
				"stonedemo",
				"protocol/src/game/StoneDemo.cpp"
			],
			[
				"testmessages.h",
				"protocol/tests/ClientServer/TestMessages.h"
			],
			[
				"testclientserver.cpp",
				"protocol/tests/ClientServer/TestClientServer.cpp"
			],
			[
				"connection.h",
				"protocol/src/protocol/Connection.h"
			],
			[
				"clientserverpackets.h",
				"protocol/src/ClientServer/ClientServerPackets.h"
			],
			[
				"connectionpacket.h",
				"protocol/src/protocol/ConnectionPacket.h"
			],
			[
				"testclient.h",
				"protocol/tests/ClientServer/TestPackets.h"
			],
			[
				"profileclientserver.cpp",
				"protocol/tests/ClientServer/ProfileClientServer.cpp"
			],
			[
				"soakclientserver.cpp",
				"protocol/tests/ClientServer/SoakClientServer.cpp"
			],
			[
				"profileprotocol.cpp",
				"protocol/tests/protocol/ProfileProtocol.cpp"
			],
			[
				"testnetwork.cpp",
				"protocol/tests/network/TestNetwork.cpp"
			],
			[
				"server.h",
				"protocol/src/ClientServer/Server.h"
			],
			[
				"testcommon.h",
				"protocol/tests/protocol/TestCommon.h"
			],
			[
				"woudbe",
				"protocol/WOULD BE NICE"
			],
			[
				"soakprotocol.cpp",
				"protocol/tests/protocol/SoakProtocol.cpp"
			],
			[
				"gamecontext.h",
				"protocol/src/game/GameContext.h"
			],
			[
				"gameserver.h",
				"protocol/src/game/GameServer.h"
			],
			[
				"client.h",
				"protocol/src/ClientServer/Client.h"
			],
			[
				"clientserverenums.h",
				"protocol/src/ClientServer/ClientServerEnums.h"
			],
			[
				"testreliablemessagechannel.cpp",
				"protocol/tests/protocol/TestReliableMessageChannel.cpp"
			],
			[
				"connection.cpp",
				"protocol/src/protocol/Connection.cpp"
			],
			[
				"protocolenums.h",
				"protocol/src/protocol/ProtocolEnums.h"
			],
			[
				"datablocksender.cpp",
				"protocol/src/protocol/DataBlockSender.cpp"
			],
			[
				"enums.h",
				"protocol/src/protocol/Enums.h"
			],
			[
				"clientserverdatab",
				"protocol/src/ClientServer/ClientServerDataBlock.h"
			],
			[
				"unittest.cpp",
				"protocol/tests/protocol/UnitTest.cpp"
			],
			[
				"testpackets.h",
				"protocol/tests/protocol/TestPackets.h"
			],
			[
				"packets.h",
				"protocol/src/ClientServer/Packets.h"
			],
			[
				"testvirtualgo.cpp",
				"protocol/tests/virtualgo/TestVirtualGo.cpp"
			],
			[
				"biconvex.cpp",
				"protocol/src/virtualgo/Biconvex.cpp"
			],
			[
				"biconvex.h",
				"protocol/src/virtualgo/Biconvex.h"
			],
			[
				"comomn.h",
				"protocol/src/virtualgo/Common.h"
			],
			[
				"common.h",
				"protocol/src/virtualgo/Common.h"
			],
			[
				"board.h",
				"protocol/src/virtualgo/Board.h"
			],
			[
				"mat4.fh",
				"external/vectorial/mat4f.h"
			],
			[
				"vec3f.h",
				"external/vectorial/vec3f.h"
			],
			[
				"core.h",
				"protocol/src/core/Core.h"
			],
			[
				"testcore.cpp",
				"protocol/tests/core/TestCore.cpp"
			],
			[
				"collisionresponse.h",
				"protocol/src/virtualgo/CollisionResponse.h"
			],
			[
				"rigidbody.h",
				"protocol/src/virtualgo/RigidBody.h"
			],
			[
				"virtualgo/",
				"protocol/src/virtualgo/Intersection.h"
			],
			[
				"testcubes.cpp",
				"protocol/tests/cubes/TestCubes.cpp"
			],
			[
				"unittest",
				"protocol/tests/protocol/UnitTest.cpp"
			],
			[
				"viewobject.h",
				"protocol/src/cubes/ViewObject.h"
			],
			[
				"engine.h",
				"protocol/src/cubes/Engine.h"
			],
			[
				"simulation.h",
				"protocol/src/cubes/Simulation.h"
			],
			[
				"simulation.cpp",
				"protocol/src/cubes/Simulation.cpp"
			],
			[
				"nvimage.h",
				"external/nvImage/nvImage.h"
			],
			[
				"nvimagedds.cpp",
				"external/nvImage/nvImageDDS.cpp"
			],
			[
				"nvimage.cpp",
				"external/nvImage/nvImage.cpp"
			],
			[
				"nvimagepng.cpp",
				"external/nvimage/nvImagePng.cpp"
			],
			[
				"nv_dds.cpp",
				"src/game/nv_dds.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
