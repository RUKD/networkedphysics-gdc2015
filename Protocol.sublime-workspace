{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"COMPRES",
				"COMPRESSION_MODE_UNCOMPRESSED"
			],
			[
				"INT",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT_MODE_",
				"SNAPSHOT_MODE_LINEAR_INTERPOLATION_10PPS"
			],
			[
				"SNAPSHOT_MODE",
				"SNAPSHOT_MODE_NAIVE_60PPS_JITTER"
			],
			[
				"interpo",
				"interpolation_start_time"
			],
			[
				"inter",
				"interpolation_start_time"
			],
			[
				"SNAPSHOT_IN",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT",
				"SNAPSHOT_INTERPOLATION_LINEAR"
			],
			[
				"time",
				"time_fragment_last_sent"
			],
			[
				"LOCK",
				"LOCKSTEP_MODE_DETERMINISTIC"
			],
			[
				"mode",
				"snapshot_mode_data"
			],
			[
				"snapshot",
				"snapshot_mode_data"
			],
			[
				"snap",
				"snapshot_mode_data"
			],
			[
				"STONE",
				"STONE_MODE_HDR_TEST"
			],
			[
				"vec",
				"vectorial"
			],
			[
				"new",
				"network_simulator"
			],
			[
				"playout",
				"playout_delay_buffer"
			],
			[
				"LOK",
				"LOCKSTEP_PACKET_INPUTS"
			],
			[
				"in",
				"input_sliding_window"
			],
			[
				"CommandLin",
				"CommandLineBufferSize"
			],
			[
				"model",
				"modelViewProjection"
			],
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"last",
				"lastConnectedClientTime"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			],
			[
				"datablock",
				"dataBlockReceiver"
			],
			[
				"ClientServerDatABlock",
				"ClientServerDataBlockSender"
			],
			[
				"ClientSer",
				"ClientServerDataBlockSender"
			],
			[
				"test_",
				"test_data_block_send_and_receive_packet_loss"
			],
			[
				"CLIENT_STATE_SENDING",
				"CLIENT_STATE_SENDING_CLIENT_DATA"
			],
			[
				"UpdatESend",
				"UpdateSendClientData"
			],
			[
				"read",
				"readyForConnection"
			],
			[
				"SERVER",
				"SERVER_CLIENT_STATE_READY_FOR_CONNECTION"
			],
			[
				"max",
				"maxServerDataSize"
			],
			[
				"fargmen",
				"fragmentId"
			],
			[
				"ack",
				"ackedFragment"
			],
			[
				"CLIENH_",
				"CLIENT_SERVER_PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_RECEIVING_SERVER_DATA"
			],
			[
				"m_num",
				"m_numServerDataFragments"
			],
			[
				"CLIENT_",
				"CLIENT_SERVER_PACKET_CONNECTION"
			],
			[
				"CreateChann",
				"CreateChannelDataInternal"
			],
			[
				"NUM",
				"NUM_CLIENT_SERVER_PACKETS"
			],
			[
				"PROTOCOL_",
				"PROTOCOL_USE_RESOLVER"
			],
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"client",
				"clientNetworkInterface"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/C++11 (Client).sublime-build",
	"command_palette":
	{
		"height": 147.0,
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/git/protocol"
	],
	"file_history":
	[
		"/Users/gaffer/git/protocol/src/Game/Cubes.h",
		"/Users/gaffer/git/protocol/src/Core/Core.h",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/src/Cubes/Config.h",
		"/Users/gaffer/git/protocol/src/Game/Snapshot.h",
		"/Users/gaffer/git/protocol/src/Game/CompressionDemo.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Engine.cpp",
		"/Users/gaffer/git/protocol/src/Game/SnapshotDemo.cpp",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/WOULD BE NICE",
		"/Users/gaffer/git/protocol/src/Game/CompressionDemo.h",
		"/Users/gaffer/git/protocol/src/Network/Simulator.h",
		"/Users/gaffer/git/protocol/src/Network/Simulator.cpp",
		"/Users/gaffer/git/protocol/BUGS",
		"/Users/gaffer/git/protocol/src/Game/Game.cpp",
		"/Users/gaffer/git/protocol/assets/Fonts/Fonts.json",
		"/Users/gaffer/git/protocol/build/FontTool.make",
		"/Users/gaffer/git/protocol/src/Cubes/Game.h",
		"/Users/gaffer/git/protocol/build/TestCore.make",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestCommon.h",
		"/Users/gaffer/git/protocol/external/ode/libccd/src/testsuites/.deps/common.Po",
		"/Users/gaffer/git/protocol/src/protocol/SlidingWindow.h",
		"/Users/gaffer/git/protocol/src/Game/SnapshotDemo.h",
		"/Users/gaffer/git/protocol/src/Protocol/SlidingWindow.h",
		"/Users/gaffer/git/protocol/src/Game/LockstepDemo.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/SoakProtocol.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/Server.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerEnums.h",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/SoakClientServer.cpp",
		"/Users/gaffer/git/protocol/external/vectorial/mat4f.h",
		"/Users/gaffer/git/protocol/external/vectorial/quat4f.h",
		"/Users/gaffer/git/protocol/src/Cubes/Mathematics.h",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/Ice/IceMatrix3x3.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.h",
		"/Users/gaffer/Desktop/pregancy",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerConstants.h",
		"/Users/gaffer/git/protocol/ClientServer.make",
		"/Users/gaffer/git/protocol/external/ode/ode/src/collision_libccd.cpp",
		"/Users/gaffer/git/protocol/build/SoakClientServer.make",
		"/Users/gaffer/git/protocol/bin/SoakClientServer",
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/LockstepDemo.h",
		"/Users/gaffer/git/protocol/src/Network/BSDSocket.h",
		"/Users/gaffer/git/protocol/src/Network/BSDSocket.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/Stream.h",
		"/Users/gaffer/git/protocol/src/Protocol/BitPacker.h",
		"/Users/gaffer/git/protocol/external/ode/drawstuff/src/x11.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/InputManager.d",
		"/Users/gaffer/git/protocol/obj/x64/Debug/tinycthread/tinycthread.d",
		"/Users/gaffer/git/protocol/src/Game/StoneDemo.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestStream.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/BitPacker.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/BitArray.h",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.cpp",
		"/Users/gaffer/git/protocol/src/Game/InputManager.cpp",
		"/Users/gaffer/git/protocol/external/nvImage/nvImageDDS.cpp",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/OPC_HybridModel.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/DataBlockSender.cpp",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.cpp",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.h",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/src/capsule.cpp",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/TestReporter.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/src/step.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.h",
		"/Users/gaffer/git/protocol/src/Game/Demo.h",
		"/Users/gaffer/Backup/protocol2/include/ProtocolSerialize.h",
		"/Users/gaffer/Backup/protocol2/include/ProtocolStream.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/matrix.cpp",
		"/Users/gaffer/git/protocol/external/ode/include/ode/matrix.h",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/external/ode/GIMPACT/include/GIMPACT/gim_math.h",
		"/Users/gaffer/git/protocol/src/VirtualGo/Common.h",
		"/Users/gaffer/git/protocol/external/ode/CHANGELOG.txt",
		"/Users/gaffer/git/protocol/Cubes.make",
		"/Users/gaffer/git/protocol/src/Protocol/DataBlockReceiver.cpp",
		"/Users/gaffer/git/protocol/external/ode/include/ode/precision.h",
		"/Users/gaffer/git/protocol/src/Protocol/Packet.h",
		"/Users/gaffer/git/protocol/external/ode/compile",
		"/Users/gaffer/git/protocol/src/core/Memory.h",
		"/Users/gaffer/git/protocol/SNAPSHOTS",
		"/Users/gaffer/git/protocol/src/Game/StoneManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/Console.cpp",
		"/Users/gaffer/git/protocol/data/shaders/Phong.frag",
		"/Users/gaffer/git/protocol/external/ode/bindings/python/setup.py",
		"/Users/gaffer/git/protocol/src/VirtualGo/RigidBody.h",
		"/Users/gaffer/git/protocol/src/Game/Common.h",
		"/Users/gaffer/git/protocol/tests/Core/TestCore.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/View.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/View.h",
		"/Users/gaffer/git/protocol/external/ode/include/ode/common.h",
		"/Users/gaffer/git/protocol/external/ode/libccd/src/testsuites/common.h",
		"/Users/gaffer/git/protocol/external/vectorial/simd4f_common.h",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/OPC_Common.h",
		"/Users/gaffer/git/protocol/external/ode/ode-config",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/.deps/OPC_LSSCollider.Plo",
		"/Users/gaffer/git/protocol/external/ode/ou/LICENSE-LESSER.TXT",
		"/Users/gaffer/git/protocol/external/ode/ode/src/joints/null.cpp",
		"/Users/gaffer/git/protocol/NEXT",
		"/Users/gaffer/git/protocol/external/ode/tests/joints/.deps/slider.Plo",
		"/Users/gaffer/git/protocol/external/ode/tests/joints/slider.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/ProtocolEnums.h",
		"/Users/gaffer/git/protocol/external/vectorial/vec4f.h",
		"/Users/gaffer/git/protocol/external/vectorial/vec3f.h",
		"/Users/gaffer/git/protocol/tests/Network/TestAddress.cpp",
		"/Users/gaffer/git/protocol/NOTES",
		"/Users/gaffer/git/protocol/src/cubes/Activation.cpp",
		"/Users/gaffer/git/protocol/src/cubes/ViewObject.h",
		"/Users/gaffer/git/protocol/src/Game/Cubes.cpp",
		"/Users/gaffer/git/protocol/src/cubes/Activation.h",
		"/Users/gaffer/git/protocol/src/cubes/Engine.h",
		"/Users/gaffer/git/protocol/src/cubes/Game.h",
		"/Users/gaffer/git/protocol/src/cubes/Hypercube.h",
		"/Users/gaffer/git/protocol/src/cubes/Mathematics.h",
		"/Users/gaffer/git/protocol/src/cubes/Simulation.h",
		"/Users/gaffer/git/protocol/src/cubes/View.h",
		"/Users/gaffer/git/protocol/src/Core/Config.h",
		"/Users/gaffer/git/protocol/external/vectorial/config.h",
		"/Users/gaffer/git/protocol/external/ode/config.guess",
		"/Users/gaffer/git/protocol/external/ode/configure",
		"/Users/gaffer/git/protocol/src/cubes/Config.h",
		"/Users/gaffer/git/protocol/external/ode/libccd/src/config.h.in",
		"/Users/gaffer/git/protocol/external/ode/ode/src/config.h",
		"/Users/gaffer/git/protocol/external/ode/libccd/src/config.h",
		"/Users/gaffer/git/protocol/src/Network/Config.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO,-WOULDBENICE",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"QuantizeVector",
			"Quantize",
			"SNAPSHOT_INTERPOLATION_LINEAR",
			"Insert",
			"m_bandwidth = ",
			"m_bandwidth",
			"kbps",
			".bytes",
			"GetBegin()",
			"SlidingWindow",
			"CONTEXT_CLIENT_SERVER",
			"SetContext",
			"CONTEXT_CONNECTION",
			"CONTEXT_CLIENT_SERVER",
			"CONTEXT_CONNECTION",
			"SetContext",
			"SerializeRead",
			"reliable_channel_messages",
			"SerializeWrite",
			"PROFILE",
			"SerializeRead",
			"GetBytes",
			"BytesWritten",
			"m_context = ",
			"191",
			"CompressPosition",
			"0.1",
			"CompressPosition",
			"serialize_compressed_vector",
			"MaxLinearSpeed",
			"MaximumLinearSpeed",
			"MaxContacts",
			"Packet",
			"sequence = ",
			"NUM_MODES",
			"CompressOrientation",
			"CompressQuaternion",
			"CompressOrientation",
			"CompressORientation",
			"Window",
			"CompressionModeData",
			"SERIALIZE_ANGULAR_VELOCITY",
			"load snapshot",
			"+load snapshot",
			"AckPacket",
			"Init",
			"ColorChangeTightnessDefault",
			"ShadowAlphaThreshold",
			"UpdateMomentum",
			"printf",
			"orientation = ",
			"rotation(",
			"::rotation",
			"sequence_greater_than",
			"InterpolationBuffer",
			"GetViewUpdate",
			"InterpolationBuffer",
			"SERIALIZE_ANGULAR_VELOCITY",
			"SERIALIZE_ASNG",
			"SERIALIZE_ANGULAR_VELOCITY",
			"_Hermite",
			"ANGULAR_VELOCITY",
			"ANGULAR_VELOCITy",
			"send",
			"has_velocity",
			"extrapolation",
			"Hermite_WithExtra",
			"extra",
			"playout_delay",
			"time",
			"#endif",
			"slerp",
			"todo",
			"Update",
			"todo",
			"_Linear",
			"camera",
			"ln_exp",
			"hermite",
			"InterpolationBuffer",
			"visible",
			"hermite",
			"m_bytes",
			"math::",
			"Render",
			"PacketQueue",
			"ResponseQueue",
			"Render",
			"simd4x4f_identity",
			"visible",
			"ViewObject.h",
			"2011",
			"velocity",
			"Bits",
			"bits_required",
			"AddSnap",
			"// todo",
			"// todo:",
			"m_sentPackets",
			"Insert",
			"CONNECTION_COUNTER_PACKETS_WRITTEN",
			"message = n",
			"m_sendQueue->",
			"Insert",
			"Insert(",
			".Insert(",
			"ReceiveQueueEntry",
			"Insert",
			"NetworkBuffer",
			"NetworkBuffer.h",
			"network_buffer",
			"NetworkBuffer",
			"test_connection()",
			"valid",
			"GetAtIndex",
			"HasSlotAvailable",
			".valid",
			"GetDefaultMode",
			"RingBuffer",
			"Lockstep",
			"ring_buffer",
			"NetorkBuffer",
			"SlidingWindow.h",
			"slidingWindow.",
			"Sliding",
			"SlidingWindow.h",
			"slidingWindow.",
			"SlidingWindow<"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SequenceBuffer",
			"sequence_buffer",
			"SequenceBuffer",
			"sliding_window",
			"network_buffer.",
			"NetworkBuffer<",
			"ring_buffer",
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 341.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"config.h",
				"src/Cubes/Config.h"
			],
			[
				"snapshot.h",
				"src/Game/Snapshot.h"
			],
			[
				"wouldbe",
				"WOULD BE NICE"
			],
			[
				"todo",
				"TODO"
			],
			[
				"compressiondemo.cpp",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"bugs",
				"BUGS"
			],
			[
				"simulator.cpp",
				"src/Network/Simulator.cpp"
			],
			[
				"simulator.h",
				"src/Network/Simulator.h"
			],
			[
				"fonts.json",
				"assets/Fonts/Fonts.json"
			],
			[
				"game.cpp",
				"src/Game/Game.cpp"
			],
			[
				"snapshotdemo.cpp",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"snapshot",
				"src/Game/Snapshot.h"
			],
			[
				"sliding",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"slidingwindow.h",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"wouldbenice",
				"WOULD BE NICE"
			],
			[
				"mat4f.h",
				"external/vectorial/mat4f.h"
			],
			[
				"mat4",
				"external/vectorial/mat4f.h"
			],
			[
				"quat4f.h",
				"external/vectorial/quat4f.h"
			],
			[
				"clientservercontext.cpp",
				"src/ClientServer/ClientServerContext.cpp"
			],
			[
				"soakprotocol.cpp",
				"tests/Protocol/SoakProtocol.cpp"
			],
			[
				"soakclientserver.cpp",
				"tests/ClientServer/SoakClientServer.cpp"
			],
			[
				"lockstepdemo.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"compression.cpp",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"bitpacker.h",
				"src/Protocol/BitPacker.h"
			],
			[
				"bsdsocket.cpp",
				"src/Network/BSDSocket.cpp"
			],
			[
				"bit",
				"src/Protocol/BitPacker.h"
			],
			[
				"stream.h",
				"src/Protocol/Stream.h"
			],
			[
				"bsdsocket.h",
				"src/Network/BSDSocket.h"
			],
			[
				"cahnges",
				"CHANGES"
			],
			[
				"com",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"steram.h",
				"src/Protocol/Stream.h"
			],
			[
				"lockstep.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"simulation.h",
				"src/Cubes/Simulation.h"
			],
			[
				"mathematics.h",
				"src/Cubes/Mathematics.h"
			],
			[
				"math.h",
				"external/ode/GIMPACT/include/GIMPACT/gim_math.h"
			],
			[
				"compre",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"snapsh",
				"src/Game/Snapshot.h"
			],
			[
				"compression",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"cube.h",
				"src/Game/Cubes.h"
			],
			[
				"demomanager.cpp",
				"src/Game/DemoManager.cpp"
			],
			[
				"demomanager.h",
				"src/Game/DemoManager.h"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"compressiondemo.h",
				"src/Game/CompressionDemo.h"
			],
			[
				"snapshotdemo.h",
				"src/Game/SnapshotDemo.h"
			],
			[
				"snapsht",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"simulation.cpp",
				"src/Cubes/Simulation.cpp"
			],
			[
				"rigidbody.h",
				"src/VirtualGo/RigidBody.h"
			],
			[
				"view.cpp",
				"src/Cubes/View.cpp"
			],
			[
				"common.h",
				"src/VirtualGo/Common.h"
			],
			[
				"core.h",
				"src/Core/Core.h"
			],
			[
				"",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"math",
				"src/Cubes/Mathematics.h"
			],
			[
				"quat4f.",
				"external/vectorial/quat4f.h"
			],
			[
				"snap",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"snapshot.cpp",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"vec4f.h",
				"external/vectorial/vec4f.h"
			],
			[
				"view.h",
				"src/Cubes/View.h"
			],
			[
				"snapshots",
				"SNAPSHOTS"
			],
			[
				"testbitarray.cpp",
				"tests/Protocol/TestBitArray.cpp"
			],
			[
				"bitarray.h",
				"src/Protocol/BitArray.h"
			],
			[
				"memory.h",
				"src/Core/Memory.h"
			],
			[
				"cubes.cpp",
				"src/Game/Cubes.cpp"
			],
			[
				"cubes.h",
				"src/Game/Cubes.h"
			],
			[
				"viewobject.h",
				"src/Cubes/ViewObject.h"
			],
			[
				"game.h",
				"src/Cubes/Game.h"
			],
			[
				"engine.cpp",
				"src/Cubes/Engine.cpp"
			],
			[
				"engine.h",
				"src/Cubes/Engine.h"
			],
			[
				"gameh",
				"src/Cubes/Game.h"
			],
			[
				"mat4.h",
				"external/vectorial/mat4f.h"
			],
			[
				"vec3f.h",
				"external/vectorial/vec3f.h"
			],
			[
				"would",
				"WOULD BE NICE"
			],
			[
				"snaphotdemo.cpp",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"reliablemessagechannel.h",
				"src/Protocol/ReliableMessageChannel.h"
			],
			[
				"connection.h",
				"src/Protocol/Connection.h"
			],
			[
				"sequenc",
				"src/Protocol/SequenceBuffer.h"
			],
			[
				"reliable",
				"src/Protocol/ReliableMessageChannel.cpp"
			],
			[
				"testprotocol.cpp",
				"tests/Protocol/TestProtocol.cpp"
			],
			[
				"testnet",
				"tests/Protocol/TestNetworkBuffer.cpp"
			],
			[
				"networkbuffer.h",
				"src/Protocol/NetworkBuffer.h"
			],
			[
				"testnetworkbuffer.cpp",
				"tests/Protocol/TestNetworkBuffer.cpp"
			],
			[
				"reliablemessagechannel.cpp",
				"src/Protocol/ReliableMessageChannel.cpp"
			],
			[
				"woludbe",
				"WOULD BE NICE"
			],
			[
				"slidingwindow.cpp",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"lockstep",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"slidingwind",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"testslid",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"testcubes.cpp",
				"tests/Cubes/TestCubes.cpp"
			],
			[
				"allocator.h",
				"src/Core/Allocator.h"
			],
			[
				"testring",
				"tests/Protocol/TestRingBuffer.cpp"
			],
			[
				"ringbuffer.h",
				"src/Protocol/RingBuffer.h"
			],
			[
				"wouldbencie",
				"WOULD BE NICE"
			],
			[
				"testcore.cpp",
				"tests/Core/TestCore.cpp"
			],
			[
				"testsli",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"slid",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"slidnigwindow.h",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"wuoldbenice",
				"WOULD BE NICE"
			],
			[
				"viwe.cpp",
				"src/Cubes/View.cpp"
			],
			[
				"quatf.h",
				"external/vectorial/quat4f.h"
			],
			[
				"hyper",
				"src/Cubes/Hypercube.h"
			],
			[
				"stonedemo.cpp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"lockstepdemo.h",
				"src/Game/LockstepDemo.h"
			],
			[
				"cubesdemo.h",
				"src/Game/CubesDemo.h"
			],
			[
				"demo.h",
				"src/Game/Demo.h"
			],
			[
				"sotnedemo.h",
				"src/Game/StoneDemo.h"
			],
			[
				"stonedemo.h",
				"src/Game/StoneDemo.h"
			],
			[
				"todo-",
				"external/ode/ode-config"
			],
			[
				"stone",
				"src/Game/StoneDemo.cpp"
			],
			[
				"queue.h",
				"src/Core/Queue.h"
			],
			[
				"cubesdemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"hy",
				"src/Cubes/Hypercube.h"
			],
			[
				"acit",
				"src/Cubes/Activation.h"
			],
			[
				"hyp",
				"src/Cubes/Hypercube.h"
			],
			[
				"vec3fh",
				"external/vectorial/vec3f.h"
			],
			[
				"tdoo",
				"TODO"
			],
			[
				"commandline.cpp",
				"src/Game/CommandLine.cpp"
			],
			[
				"inter",
				"src/Game/InterpolationDemo.h"
			],
			[
				"change",
				"CHANGES"
			],
			[
				"lockstep.",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"game",
				"src/Cubes/Game.h"
			],
			[
				"totdo",
				"external/ode/ode/TODO"
			],
			[
				"repl",
				"src/Game/ReplayManager.cpp"
			],
			[
				"replay",
				"src/Game/ReplayManager.cpp"
			],
			[
				"inputmanager.cpp",
				"src/Game/InputManager.cpp"
			],
			[
				"lcokstep",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"packet.h",
				"src/Protocol/Packet.h"
			],
			[
				"testsliding",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"core.cpp",
				"src/Core/Core.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
