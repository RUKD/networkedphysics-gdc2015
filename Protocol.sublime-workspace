{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"max",
				"maxPacketSize"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/C++11.sublime-build",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"TODO",
				"Package Control: Discover Packages"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 647.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gaffer/git/virtualgo/VirtualGo.sublime-workspace",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/NOTES",
		"/Users/gaffer/git/protocol/Protocol.cpp",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/GIMPACT/src/gim_trimesh_capsule_collision.cpp",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/CheckMacros.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/TimeConstraint.h",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/iterator",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/chrono",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/demos/DeterministicLockstepDemo.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/OPCODE/OPC_LSSTriOverlap.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/build/premake4.lua",
		"/Users/gaffer/git/protocol/reference/05 - LAN Matchmaking/Beacon.cpp",
		"/Users/gaffer/git/protocol/reference/08 - Authority Management/ode/objects.h",
		"/Users/gaffer/git/protocol/reference/08 - Authority Management/ode/ode.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ode/demo/demo_ode.cpp",
		"/Users/gaffer/git/protocol/reference/01 - Sending and Receiving Packets/vs2005/sendreceive.sln",
		"/Users/gaffer/git/protocol/reference/01 - Sending and Receiving Packets/addresses.txt",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/AuthorityDemo.h",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/memory",
		"/Users/gaffer/git/protocol/reference/02 - Virtual Connection over UDP/vs2005/VirtualConnectionUDP.sln",
		"/Users/gaffer/git/protocol/reference/02 - Virtual Connection over UDP/Client.cpp",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/lan/NetConnection.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/Config.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ode/src/collision_trimesh_opcode.cpp",
		"/Users/gaffer/git/protocol/GOALS",
		"/Users/gaffer/git/protocol/reference/09 - Drop-In COOP for Open World Games/GameObject.h",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/NetReliability.h",
		"/Users/gaffer/git/protocol/reference/07 - Reading and Writing Packets/NetStream.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/Network.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/UnitTest.cpp",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ode/src/util.cpp",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/OPCODE/Ice/IceUtils.cpp",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/UnitTest++.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/tests/UnitTest++/src/TimeConstraint.cpp",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/tests/UnitTest++/src/TestList.cpp",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/tests/UnitTest++/src/TestList.h",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/Test.cpp",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/NetTransport.cpp",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/NetPlatform.h",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/Client.cpp",
		"/Users/gaffer/Documents/sublime text",
		"/Users/gaffer/Library/Application Support/Sublime Text 3/Packages/User/C++11.sublime-build",
		"/usr/include/sys/fcntl.h",
		"/Users/gaffer/git/protocol/reference/01 - Sending and Receiving Packets/Net.h",
		"/usr/include/assert.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/vectorial/simd4x4f_neon.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/vectorial/simd4f_neon.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/shared/Engine.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/shared/Engine.cpp",
		"/Users/gaffer/git/protocol/reference/09 - Drop-In COOP for Open World Games/Server",
		"/Users/gaffer/git/protocol/Signal.cpp",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/OPCODE/OPC_SphereTriOverlap.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/vectorial/simd4f_common.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ode/src/collision_kernel.cpp",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/NetTransport.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/OPCODE/OPC_PlanesTriOverlap.h",
		"/Users/gaffer/git/protocol/reference/04 - Building a Node Mesh/Test.cpp",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/lan/NetNodeMesh.h",
		"/Users/gaffer/git/protocol/reference/06 - Real World Networking/Server.cpp",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/CurrentTest.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/tests/UnitTest++/docs/UnitTest++.html",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/tests/UnitTest++/src/UnitTest++.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/TestSuite.h",
		"/Users/gaffer/git/protocol/reference/01 - Sending and Receiving Packets/Test.cpp",
		"/Users/gaffer/git/protocol/reference/02 - Virtual Connection over UDP/Test.cpp",
		"/Users/gaffer/git/protocol/reference/03 - Reliability and Flow Control/Test.cpp",
		"/Users/gaffer/git/protocol/reference/07 - Reading and Writing Packets/Test.cpp",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/Test.h",
		"/Users/gaffer/git/protocol/reference/08 - Authority Management/NetStream.h",
		"/Users/gaffer/Documents/party and sessions.md",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/CHANGELOG.txt",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/Checks.h",
		"/Users/gaffer/git/protocol/Serialize.cpp",
		"/Users/gaffer/git/protocol/.git/MERGE_MSG",
		"/Users/gaffer/git/protocol/reference/08 - Authority Management/Display.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ou/include/ou/assert.h",
		"/Users/gaffer/git/protocol/reference/11 - Cubes/resources/ode-0.11.1/ltmain.sh",
		"/Users/gaffer/git/protocol/Serialize",
		"/Users/gaffer/git/protocol/reference/Serialize.cpp",
		"/Users/gaffer/git/protocol/reference/Serialize",
		"/Users/gaffer/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/gaffer/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/gaffer/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/TestReporter.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/StateReplicationDemo.h",
		"/Users/gaffer/git/protocol/reference/10 - Fiedler's Cubes/UnitTest++/Posix/SignalTranslator.h",
		"/Users/gaffer/git/protocol/README.md",
		"/Users/gaffer/experiments/durango/durango_achievements.cpp",
		"/Users/gaffer/Dropbox/backup/protocol2/include/ProtocolUtil.h",
		"/Users/gaffer/Dropbox/backup/protocol2/include/ProtocolCommon.h",
		"/Users/gaffer/Documents/TAX",
		"/Users/gaffer/experiments/durango/NOTES",
		"/Users/gaffer/experiments/durango/durango_util.cpp",
		"/Users/gaffer/experiments/durango/durango_util.h",
		"/Users/gaffer/experiments/durango/durango_party.cpp",
		"/Users/gaffer/experiments/durango/durango_telemetry.cpp",
		"/Users/gaffer/experiments/durango/durango_sessions.cpp",
		"/Users/gaffer/experiments/durango/durango_matchmaking.cpp",
		"/Users/gaffer/experiments/durango/durango_sign_in.cpp",
		"/Users/gaffer/experiments/durango/durango_party.h",
		"/Users/gaffer/experiments/durango/durango_sessions.h",
		"/Users/gaffer/experiments/dibs/CHANGES",
		"/Users/gaffer/experiments/dibs/client/css/app.styl",
		"/Users/gaffer/experiments/dibs/client/code/app/app.coffee",
		"/Users/gaffer/experiments/dibs/TODO",
		"/Users/gaffer/experiments/dibs/server/rpc/dibs.coffee",
		"/Users/gaffer/experiments/dibs/client/templates/chat/command.jade",
		"/Users/gaffer/experiments/dibs/node_modules/socketstream/new_project/server/rpc/demo.js",
		"/Users/gaffer/experiments/dibs/app.js",
		"/Users/gaffer/experiments/dibs/client/views/app.jade",
		"/Users/gaffer/experiments/dibs/client/templates/chat/status.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/node_modules/connect/lib/public/style.css",
		"/Users/gaffer/experiments/dibs/node_modules/socketstream/node_modules/connect/lib/public/style.css",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/.bin/jade",
		"/Users/gaffer/experiments/dibs/node_modules/socketstream/test/fixtures/project/client/views/main.jade",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/jade/lib/jade.js",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/jade/jade.min.js",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/jade/bin/jade",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/jade/jade.md",
		"/Users/gaffer/experiments/dibs/node_modules/ss-jade/node_modules/jade/jade.js",
		"/Users/gaffer/experiments/dibs/client/templates/chat/message.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/example/views/home.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/example/views/layout.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/example/views/login.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/example/views/register.jade",
		"/Users/gaffer/experiments/dibs/node_modules/everyauth/node_modules/openid/expressjs_sample/login.jade"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ReliableChann",
			"ReliableBlock",
			"ReliableChannelData",
			"blockId",
			"test_connection",
			"ProcessPacket",
			"test_",
			"resize",
			"ack_bits",
			"GenerateAckBits",
			"SentPacketData",
			"ReceivedPacketData",
			"Recieve",
			"todo",
			"todo:",
			"read packet",
			"cout << ",
			"GenerateAckBits",
			"ProcessAcks",
			"ack_bits",
			"block %d",
			"ProcessPacketFailure",
			"process packet failure",
			"ProcessDataFromPacket",
			"throw",
			"_",
			"ProcessPacketFailure",
			"Channel",
			"chrono",
			"ConnectionInterface",
			"Connection",
			"chrone",
			"ms = ",
			"Clock",
			"m_current_send_block",
			"PacketsRead",
			"class Connection",
			"FailCh",
			"ReliableChannel",
			"catch",
			"runtime",
			"class Connection",
			"class Connect",
			"add sent",
			"ReliableBlock",
			"ReliableChannelData",
			"class Connection",
			"ReliableChannelData",
			"add_sent",
			"SlidingWindow",
			"m_sent_blocks",
			"SlidingWindow",
			"m_channels",
			"class Connection",
			"ProcessDataFromPacket",
			"class Connection",
			"make_shared<ConnectionPacket",
			"ConnectionPacket",
			"Connection",
			"serialize write",
			"ConnectionPacket",
			"<ConnectionPacket",
			"Channel",
			"Event",
			"class Connection",
			"NumCounters",
			"Connection",
			"Counter",
			"GenerateAckBits",
			"sequence_greater_than",
			"test_sequence",
			"todo",
			"size",
			"SlidingWindow",
			"_UNSPEC",
			"sendto",
			"_ipv4",
			"AF_INET6",
			"SendPacket",
			"_ipv4",
			"Internal",
			"sockaddr_in",
			"Internal",
			"ReceivePacket",
			"_in",
			"serialize read failure",
			"read failure",
			"m_readIndex",
			"SerializeWrite",
			"SetReadBuffer",
			"serialize_ex",
			"bind",
			"( port )",
			"format_string",
			"Factory",
			"sendto",
			"= 1000",
			"SendPacket",
			"Factory<Packet",
			"NetworkInterface(",
			"NetworkInterface( ",
			"Packet",
			"SendPacket",
			"SendPacket(",
			"Update(",
			"NetworkInterface",
			"make_shared",
			"make_shared>",
			"NetworkInterface",
			"DNSRes",
			"NEtworkInterafce",
			"Factory",
			"runtime_error",
			"todo",
			"map;",
			"_dns()",
			"> >",
			"std::",
			"printf",
			"ToString",
			"ipv6 address",
			"htonl",
			"honl",
			"printf",
			"ipv4 address",
			"Address",
			"TestInterface",
			"GetAddress_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 506.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"notes",
				"NOTES"
			],
			[
				"todo",
				"TODO"
			],
			[
				"protocol.cpp",
				"Protocol.cpp"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"goals",
				"GOALS"
			],
			[
				"goal",
				"GOALS"
			],
			[
				"netrel",
				"reference/06 - Real World Networking/NetReliability.h"
			],
			[
				"protocol",
				"Protocol.cpp"
			],
			[
				"sen",
				"reference/01 - Sending and Receiving Packets/Net.h"
			],
			[
				"seria",
				"Serialize.cpp"
			],
			[
				"ser",
				"Serialize.cpp"
			],
			[
				"serialize.cpp",
				"reference/Serialize.cpp"
			],
			[
				"se",
				"reference/Serialize.cpp"
			],
			[
				"",
				"reference/Serialize.cpp"
			],
			[
				"netstream.h",
				"reference/07 - Reading and Writing Packets/NetStream.h"
			],
			[
				"stream.h",
				"reference/07 - Reading and Writing Packets/NetStream.h"
			],
			[
				"sessions.cpp",
				"durango_sessions.cpp"
			],
			[
				"util.cpp",
				"durango_util.cpp"
			],
			[
				"util.h",
				"durango_util.h"
			],
			[
				"party.cpp",
				"durango_party.cpp"
			],
			[
				"sign_in.cpp",
				"durango_sign_in.cpp"
			],
			[
				"sessions",
				"durango_sessions.cpp"
			],
			[
				"durango_sign_in.cpp",
				"durango_sign_in.cpp"
			],
			[
				"durango_sessions.cpp",
				"durango_sessions.cpp"
			],
			[
				"durango_party.cpp",
				"durango_party.cpp"
			],
			[
				"durango_party.h",
				"durango_party.h"
			],
			[
				"durango_util.h",
				"durango_util.h"
			],
			[
				"durango_util.cpp",
				"durango_util.cpp"
			],
			[
				"coffee",
				"client/code/app/app.coffee"
			],
			[
				"dibs.coffee",
				"server/rpc/dibs.coffee"
			],
			[
				"app.coffee",
				"client/code/app/app.coffee"
			],
			[
				"jade",
				"client/templates/chat/command.jade"
			],
			[
				"status.",
				"client/templates/chat/status.jade"
			],
			[
				"command.jade",
				"client/templates/chat/command.jade"
			],
			[
				"app",
				"client/views/app.jade"
			],
			[
				"a",
				"client/code/app/app.coffee"
			],
			[
				"styl",
				"node_modules/socketstream/node_modules/connect/lib/public/style.css"
			],
			[
				"app.js",
				"app.js"
			],
			[
				"demo.coffee",
				"server/rpc/demo.coffee"
			],
			[
				"leader",
				"server/rpc/leaderboard.coffee"
			],
			[
				"demo.js",
				"node_modules/socketstream/new_project/server/rpc/demo.js"
			],
			[
				"package.json",
				"package.json"
			],
			[
				".",
				".nodemonignore"
			],
			[
				"message.jade",
				"client/templates/chat/message.jade"
			],
			[
				"entry.coffee",
				"client/code/app/entry.coffee"
			],
			[
				"biconvex.h",
				"Biconvex.h"
			],
			[
				"view",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"viewcontroller.m",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"sound.h",
				"Sound.h"
			],
			[
				"gameinstance.h",
				"GameInstance.h"
			],
			[
				"stoneinstance.h",
				"StoneInstance.h"
			],
			[
				"config.h",
				"Config.h"
			],
			[
				"telemetry.h",
				"Telemetry.h"
			],
			[
				"intersection.h",
				"Intersection.h"
			],
			[
				"stonedata.h",
				"StoneData.h"
			],
			[
				"main",
				"xcode/Virtual Go/main.m"
			],
			[
				"game",
				"GameInstance.h"
			],
			[
				"physics.h",
				"Physics.h"
			],
			[
				"rigidbody.h",
				"RigidBody.h"
			],
			[
				"accel",
				"Accelerometer.h"
			],
			[
				"vec3f.h",
				"vectorial/vec3f.h"
			],
			[
				"touch.h",
				"Touch.h"
			],
			[
				"log.txt",
				"log.txt"
			],
			[
				"viewcont",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"opengl.m",
				"xcode/Virtual Go/OpenGL.m"
			],
			[
				"gen",
				"MeshGenerators.h"
			],
			[
				"mat4f.h",
				"vectorial/mat4f.h"
			],
			[
				"mat4f",
				"vectorial/mat4f.h"
			],
			[
				"viewcontroller.h",
				"xcode/Virtual Go/ViewController.h"
			],
			[
				"meshgenerators.h",
				"MeshGenerators.h"
			],
			[
				"opengl.h",
				"xcode/Virtual Go/OpenGL.h"
			],
			[
				"board.h",
				"Board.h"
			],
			[
				"mesh.h",
				"Mesh.h"
			],
			[
				"gener",
				"MeshGenerators.h"
			],
			[
				"common.h",
				"Common.h"
			],
			[
				"scenegrid.h",
				"SceneGrid.h"
			],
			[
				"mesh",
				"MeshGenerators.h"
			],
			[
				"render.h",
				"Render.h"
			],
			[
				"vew",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"generat",
				"MeshGenerators.h"
			],
			[
				"stone.h",
				"StoneData.h"
			],
			[
				"mat3f.h",
				"vectorial/mat3f.h"
			],
			[
				"simd",
				"vectorial/simd4x4f.h"
			],
			[
				"mat4h",
				"vectorial/mat4f.h"
			],
			[
				"stone",
				"StoneData.h"
			],
			[
				"physcis.h",
				"Physics.h"
			],
			[
				"collisiondetection.h",
				"CollisionDetection.h"
			],
			[
				"collisionresponse.h",
				"CollisionResponse.h"
			],
			[
				"unittest.cpp",
				"UnitTest.cpp"
			],
			[
				"viewcontrol.",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"simd4",
				"vectorial/simd4x4f.h"
			],
			[
				"inter",
				"Intersection.h"
			],
			[
				"oldviewcontroller.m",
				"xcode/Virtual Go/OldViewController.m"
			],
			[
				"old",
				"xcode/Virtual Go/OldViewController.m"
			],
			[
				"gameinstnce.h",
				"GameInstance.h"
			],
			[
				"oldview",
				"xcode/Virtual Go/OldViewController.m"
			],
			[
				"viewcontr",
				"xcode/Virtual Go/ViewController.m"
			],
			[
				"dynamics.cpp",
				"Dynamics.cpp"
			],
			[
				"inters",
				"Intersection.h"
			],
			[
				"tessel",
				"Tessellation.cpp"
			],
			[
				"collision.cpp",
				"Collision.cpp"
			],
			[
				"support.cpp",
				"Support.cpp"
			],
			[
				"tessellation.cpp",
				"Tessellation.cpp"
			],
			[
				"game.h",
				"GameInstance.h"
			],
			[
				"vec4f.h",
				"vectorial/vec4f.h"
			],
			[
				"borad.h",
				"Board.h"
			],
			[
				"collisiondetectioh.",
				"CollisionDetection.h"
			],
			[
				"collisiondetectio.h",
				"CollisionDetection.h"
			],
			[
				"vec3",
				"vectorial/vec3f.h"
			],
			[
				"shader.vsh",
				"xcode/Virtual Go/Shaders/Shader.vsh"
			],
			[
				"shader.fsh",
				"xcode/Virtual Go/Shaders/Shader.fsh"
			],
			[
				"virtual",
				"VirtualGo.cpp"
			],
			[
				"virtualgo.cpp",
				"xcode/Virtual Go.xcodeproj/project.pbxproj"
			],
			[
				"platform.h",
				"Platform.h"
			],
			[
				"dropstone",
				"~/Dropbox/talks/gdc2009/sandbox/source/Render.h"
			],
			[
				"simd4x4f.h",
				"vectorial/simd4x4f.h"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"inertiatensor.h",
				"InertiaTensor.h"
			],
			[
				".up",
				"VirtualGo.sublime-project"
			],
			[
				"go.cpp",
				"VirtualGo.cpp"
			],
			[
				"colliionresponse.h",
				"CollisionResponse.h"
			],
			[
				"rigidbod.h",
				"RigidBody.h"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"stb_image.c",
				"stb_image.c"
			],
			[
				"platform.cpp",
				"Platform.cpp"
			],
			[
				"pre",
				"premake4.lua"
			],
			[
				"stb",
				"stb_image.c"
			],
			[
				"virtuago.cpp",
				"VirtualGo.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
