{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"last",
				"lastConnectedClientTime"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			],
			[
				"datablock",
				"dataBlockReceiver"
			],
			[
				"ClientServerDatABlock",
				"ClientServerDataBlockSender"
			],
			[
				"ClientSer",
				"ClientServerDataBlockSender"
			],
			[
				"test_",
				"test_data_block_send_and_receive_packet_loss"
			],
			[
				"CLIENT_STATE_SENDING",
				"CLIENT_STATE_SENDING_CLIENT_DATA"
			],
			[
				"UpdatESend",
				"UpdateSendClientData"
			],
			[
				"read",
				"readyForConnection"
			],
			[
				"SERVER",
				"SERVER_CLIENT_STATE_READY_FOR_CONNECTION"
			],
			[
				"max",
				"maxServerDataSize"
			],
			[
				"fargmen",
				"fragmentId"
			],
			[
				"ack",
				"ackedFragment"
			],
			[
				"CLIENH_",
				"CLIENT_SERVER_PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_RECEIVING_SERVER_DATA"
			],
			[
				"m_num",
				"m_numServerDataFragments"
			],
			[
				"CLIENT_",
				"CLIENT_SERVER_PACKET_CONNECTION"
			],
			[
				"CreateChann",
				"CreateChannelDataInternal"
			],
			[
				"NUM",
				"NUM_CLIENT_SERVER_PACKETS"
			],
			[
				"PROTOCOL_",
				"PROTOCOL_USE_RESOLVER"
			],
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"client",
				"clientNetworkInterface"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/C++11 (Client).sublime-build",
	"command_palette":
	{
		"height": 107.0,
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/git/protocol"
	],
	"file_history":
	[
		"/Users/gaffer/git/virtualgo/Render.h",
		"/Users/gaffer/git/protocol/src/Cubes/View.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Render.h",
		"/Users/gaffer/git/protocol/src/game/CubesDemo.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/View.h",
		"/Users/gaffer/git/virtualgo/README.md",
		"/Users/gaffer/git/protocol/src/virtualgo/RigidBody.h",
		"/Users/gaffer/git/protocol/src/cubes/ViewObject.h",
		"/Users/gaffer/git/protocol/external/vectorial/vec3f.h",
		"/Users/gaffer/git/cubes/client/View.cpp",
		"/Users/gaffer/git/protocol/src/game/CubesDemo.h",
		"/Users/gaffer/git/protocol/src/core/Core.h",
		"/Users/gaffer/git/protocol/WOULD BE NICE",
		"/Users/gaffer/git/protocol/src/Game/InterpolationDemo.h",
		"/Users/gaffer/git/protocol/src/game/DemoManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/InterpolationDemo.cpp",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/src/game/Console.cpp",
		"/Users/gaffer/git/protocol/src/game/Console.h",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.cpp",
		"/Users/gaffer/git/protocol/src/game/CommandLine.h",
		"/Users/gaffer/git/protocol/src/game/Game.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.cpp",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestClientServer.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestClientServer.h",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/src/Cubes/ViewObject.h",
		"/Users/gaffer/git/protocol/src/cubes/Game.h",
		"/Users/gaffer/git/virtualgo/Intersection.h",
		"/Users/gaffer/git/virtualgo/xcode/Virtual Go/en.lproj/MainStoryboard_iPad.storyboard",
		"/Users/gaffer/git/virtualgo/xcode/Virtual Go.xcodeproj/project.xcworkspace/xcuserdata/gaffer.xcuserdatad/UserInterfaceState.xcuserstate",
		"/Users/gaffer/git/virtualgo/xcode/Virtual Go/en.lproj/MainStoryboard_iPhone.storyboard",
		"/Users/gaffer/git/virtualgo/UnitTest++/Posix/SignalTranslator.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestChannelStructure.h",
		"/Users/gaffer/git/cubes/demos/SingleplayerDemo.h",
		"/Users/gaffer/git/protocol/build/ProfileProtocol.make",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestMessages.h",
		"/Users/gaffer/git/protocol/data/fonts/Console.font",
		"/Users/gaffer/git/protocol/data/shaders/Console.frag",
		"/Users/gaffer/git/protocol/data/shaders/Console.vert",
		"/Users/gaffer/git/protocol/src/network/Resolver.h",
		"/Users/gaffer/git/protocol/src/protocol/Connection.h",
		"/Users/gaffer/git/protocol/src/virtualgo/Common.h",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.h",
		"/Users/gaffer/git/protocol/src/protocol/Object.h",
		"/Users/gaffer/git/protocol/Cubes.make",
		"/Users/gaffer/git/protocol/src/game/Demo.h",
		"/Users/gaffer/git/protocol/data/shaders/Default.frag",
		"/Users/gaffer/git/protocol/src/protocol/DataBlockSender.cpp",
		"/Users/gaffer/git/protocol/src/game/StoneDemo.cpp",
		"/Users/gaffer/git/virtualgo/xcode/Virtual Go/Shaders/StoneShader.fragment",
		"/Users/gaffer/git/protocol/src/ClientServer/Server.h",
		"/Users/gaffer/git/virtualgo/Stone.h",
		"/Users/gaffer/git/protocol/build/StoneTool.make",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestPackets.h",
		"/Users/gaffer/git/protocol/tests/core/TestCore.cpp",
		"/Users/gaffer/git/protocol/src/protocol/Stream.h",
		"/Users/gaffer/git/protocol/src/ClientServer/Server.cpp",
		"/Users/gaffer/git/protocol/src/protocol/Connection.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/ProfileClientServer.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/SoakClientServer.cpp",
		"/Users/gaffer/git/protocol/tests/protocol/ProfileProtocol.cpp",
		"/Users/gaffer/git/protocol/tests/protocol/SoakProtocol.cpp",
		"/Users/gaffer/git/protocol/tests/protocol/TestConnection.cpp",
		"/Users/gaffer/git/protocol/tests/protocol/TestReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/src/protocol/ConnectionPacket.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerPackets.h",
		"/Users/gaffer/git/protocol/src/network/BSDSocket.cpp",
		"/Users/gaffer/git/protocol/tests/network/TestNetwork.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerDataBlock.h",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/TestClientServer/TestClientServer.d",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestCommon.h",
		"/Users/gaffer/git/protocol/build/TestClientServer.make",
		"/Users/gaffer/git/virtualgo/xcode/Virtual Go/Shaders/BoardShader.fragment",
		"/Users/gaffer/git/protocol/src/virtualgo/Board.h",
		"/Users/gaffer/git/protocol/build/ProfileClientServer.make",
		"/Users/gaffer/git/protocol/src/protocol/ProtocolEnums.h",
		"/Users/gaffer/git/protocol/build/SoakClientServer.make",
		"/Users/gaffer/git/protocol/build/TestNetwork.make",
		"/Users/gaffer/git/protocol/src/clientServer/ClientServerEnums.h",
		"/Users/gaffer/git/protocol/ClientServer.make",
		"/Users/gaffer/git/protocol/tests/protocol/TestCommon.h",
		"/Users/gaffer/git/protocol/tests/protocol/UnitTest.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/UnitTest.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/CurrentTest.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/Test.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestList.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestRunner.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestDetails.cpp",
		"/Users/gaffer/git/protocol/tests/network/UnitTest.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest.cpp",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestSuite.h",
		"/Users/gaffer/git/protocol/tests/protocol/TestStream.cpp",
		"/Users/gaffer/git/virtualgo/Common.h",
		"/Users/gaffer/git/protocol/data/shaders/Phong.frag",
		"/Users/gaffer/git/protocol/src/game/GameClient.cpp",
		"/Users/gaffer/git/protocol/src/game/GameClient.h",
		"/Users/gaffer/git/protocol/src/game/GameServer.h",
		"/Users/gaffer/git/protocol/src/game/GameMessages.h",
		"/Users/gaffer/git/protocol/src/game/GameContext.h",
		"/Users/gaffer/git/protocol/src/game/GamePackets.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerConstants.h",
		"/Users/gaffer/git/protocol/src/protocol/ProtocolConstants.h",
		"/Users/gaffer/git/protocol/src/network/Constants.h",
		"/Users/gaffer/git/protocol/src/Protocol/ProtocolEnums.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerEnums.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerDataBlock.cpp",
		"/Users/gaffer/git/protocol/build/Server.make",
		"/Users/gaffer/git/protocol/src/cubes/Simulation.h",
		"/Users/gaffer/git/protocol/tests/protocol/TestMessages.h",
		"/Users/gaffer/git/protocol/tests/network/TestPackets.h",
		"/Users/gaffer/git/protocol/tests/protocol/TestPackets.h",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestReporter.cpp",
		"/Users/gaffer/git/protocol/Protocol.make",
		"/Users/gaffer/git/virtualgo/UnitTest++/TestMacros.h",
		"/Users/gaffer/git/protocol/src/protocol/DataBlockReceiver.cpp",
		"/Users/gaffer/git/virtualgo/Dynamics.cpp",
		"/Users/gaffer/git/protocol/src/clientServer/Client.h",
		"/Users/gaffer/git/protocol/build/Client.make",
		"/Users/gaffer/git/protocol/src/protocol/Enums.h",
		"/Users/gaffer/git/protocol/src/ClientServer/Packets.h",
		"/Users/gaffer/git/protocol/tests/Network/TestPackets.h",
		"/Users/gaffer/git/protocol/build/SoakProtocol.make",
		"/Users/gaffer/git/protocol/bin/SoakProtocol",
		"/Users/gaffer/git/protocol/build/TestProtocol.make"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"gl",
			"sony",
			"Sony",
			"LoadDemo",
			"load stone",
			"load cubes",
			"IsActive",
			"CONTEXT_USER",
			"TestContext",
			"CONTEXT_USER",
			"TestContext",
			".packetType",
			".packetTYpe",
			".packetType",
			"packetType",
			".packetType",
			"->packetType",
			"Config->PacketType",
			"connectionConfig.packetType",
			"packetType",
			"packetType = ",
			"ConnectionPacket",
			"ClientServerContext",
			"value == magic",
			"disconnect",
			"disconnet",
			"already_connected(",
			"timeout()",
			"established()",
			"challenge()",
			"0x51246234",
			"TestCommon.h",
			"pm cubes",
			"MaxResolveAddresses",
			"MaxHostName",
			"protocol/ClientServerContext.h",
			"protocol/ClientServerData",
			"class Block;",
			"OnServerDataReceived",
			"struct ClientServerInfo",
			"PacketFactory",
			"ServerClientState",
			"ClientServerState",
			"CONTEXT_",
			"#include \"protocol/Enums.h\"",
			"Connection",
			"Simulator",
			"Biconvex_SAT",
			"IntersectPlaneBiconvex_LocalSpace",
			"IntersectPlaneBiconvex",
			"IntersectPlaneBiconvex_LocalSpace",
			"surface_normal_at_point",
			"RigidBodyTransform",
			"_CLOSE_VEC",
			"CHECK",
			"ASSERT",
			"-j32",
			"printf",
			"_stress_test",
			"_stress_",
			"#define CORE_ASSERT",
			"CHECK_CLOSE",
			"CHECK",
			"ActiveObject",
			"nv_dds",
			"TranslateDX10Format",
			"readPng",
			"readPing",
			"\"../data",
			"\"data/",
			"Output.dds",
			"output.dds",
			"data\"",
			"StoneDemo",
			"meshData",
			"MeshData",
			"struct MeshData",
			"MESH_H",
			"numVertices = ",
			"MODEL_H",
			"texture_a",
			"LightPosition",
			"_fps",
			"[]",
			"operator",
			"DDSF_CUBEMAP_POSITIVEX",
			"fourcc",
			"subdivision",
			"tesselation",
			"glm::",
			"glViewport",
			"DrawMeshInstances",
			"check_",
			"normalMatrix",
			"after render",
			"ProjectionMatrix",
			"StoneRender.h",
			"stonerender.h",
			"glm",
			"vec3f",
			"mat4",
			"game_init",
			"clockwise",
			"Subdivid",
			"clockwise",
			"stone_instance_buffer",
			"RenderStonesInstanced",
			"StoneManager.h",
			"CORE_DELENTE",
			"client->",
			"game_update",
			"client, ",
			"Render",
			"override",
			"overrie",
			"functions[",
			"Execute",
			"m_funcion",
			"Render",
			"justActivated",
			"Backspace(",
			"Deactivate",
			"Deactivated",
			"justActivated",
			"`",
			"BindVertex",
			"commandSize",
			"Cursor("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 394.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"render.h",
				"virtualgo/Render.h"
			],
			[
				"view.cpp",
				"protocol/src/cubes/View.cpp"
			],
			[
				"cubedemo.cpp",
				"protocol/src/game/CubesDemo.cpp"
			],
			[
				"todo",
				"protocol/TODO"
			],
			[
				"wouldbenice",
				"protocol/WOULD BE NICE"
			],
			[
				"game.h",
				"protocol/src/cubes/Game.h"
			],
			[
				"cubesdemo.h",
				"protocol/src/game/CubesDemo.h"
			],
			[
				"cubesdemo.cpp",
				"protocol/src/game/CubesDemo.cpp"
			],
			[
				"premake4.lua",
				"protocol/premake4.lua"
			],
			[
				"changes",
				"protocol/CHANGES"
			],
			[
				"game.cpp",
				"protocol/src/game/Game.cpp"
			],
			[
				"console.cpp",
				"protocol/src/game/Console.cpp"
			],
			[
				"console.h",
				"protocol/src/game/Console.h"
			],
			[
				"commandline.h",
				"protocol/src/game/CommandLine.h"
			],
			[
				"client.cpp",
				"protocol/src/ClientServer/Client.cpp"
			],
			[
				"demomanager.cpp",
				"protocol/src/game/DemoManager.cpp"
			],
			[
				"stonedemo.h",
				"protocol/src/game/StoneDemo.h"
			],
			[
				"stonedemo",
				"protocol/src/game/StoneDemo.cpp"
			],
			[
				"testmessages.h",
				"protocol/tests/ClientServer/TestMessages.h"
			],
			[
				"testclientserver.cpp",
				"protocol/tests/ClientServer/TestClientServer.cpp"
			],
			[
				"connection.h",
				"protocol/src/protocol/Connection.h"
			],
			[
				"clientserverpackets.h",
				"protocol/src/ClientServer/ClientServerPackets.h"
			],
			[
				"connectionpacket.h",
				"protocol/src/protocol/ConnectionPacket.h"
			],
			[
				"testclient.h",
				"protocol/tests/ClientServer/TestPackets.h"
			],
			[
				"profileclientserver.cpp",
				"protocol/tests/ClientServer/ProfileClientServer.cpp"
			],
			[
				"soakclientserver.cpp",
				"protocol/tests/ClientServer/SoakClientServer.cpp"
			],
			[
				"profileprotocol.cpp",
				"protocol/tests/protocol/ProfileProtocol.cpp"
			],
			[
				"testnetwork.cpp",
				"protocol/tests/network/TestNetwork.cpp"
			],
			[
				"server.h",
				"protocol/src/ClientServer/Server.h"
			],
			[
				"testcommon.h",
				"protocol/tests/protocol/TestCommon.h"
			],
			[
				"wouldbe",
				"protocol/WOULD BE NICE"
			],
			[
				"woudbe",
				"protocol/WOULD BE NICE"
			],
			[
				"soakprotocol.cpp",
				"protocol/tests/protocol/SoakProtocol.cpp"
			],
			[
				"gameclient.cpp",
				"protocol/src/game/GameClient.cpp"
			],
			[
				"gamecontext.h",
				"protocol/src/game/GameContext.h"
			],
			[
				"gameserver.h",
				"protocol/src/game/GameServer.h"
			],
			[
				"gameclient.h",
				"protocol/src/game/GameClient.h"
			],
			[
				"client.h",
				"protocol/src/ClientServer/Client.h"
			],
			[
				"server.cpp",
				"protocol/src/ClientServer/Server.cpp"
			],
			[
				"clientserverenums.h",
				"protocol/src/ClientServer/ClientServerEnums.h"
			],
			[
				"testreliablemessagechannel.cpp",
				"protocol/tests/protocol/TestReliableMessageChannel.cpp"
			],
			[
				"connection.cpp",
				"protocol/src/protocol/Connection.cpp"
			],
			[
				"protocolenums.h",
				"protocol/src/protocol/ProtocolEnums.h"
			],
			[
				"datablocksender.cpp",
				"protocol/src/protocol/DataBlockSender.cpp"
			],
			[
				"enums.h",
				"protocol/src/protocol/Enums.h"
			],
			[
				"clientserverdatab",
				"protocol/src/ClientServer/ClientServerDataBlock.h"
			],
			[
				"unittest.cpp",
				"protocol/tests/protocol/UnitTest.cpp"
			],
			[
				"testpackets.h",
				"protocol/tests/protocol/TestPackets.h"
			],
			[
				"packets.h",
				"protocol/src/ClientServer/Packets.h"
			],
			[
				"testvirtualgo.cpp",
				"protocol/tests/virtualgo/TestVirtualGo.cpp"
			],
			[
				"biconvex.cpp",
				"protocol/src/virtualgo/Biconvex.cpp"
			],
			[
				"biconvex.h",
				"protocol/src/virtualgo/Biconvex.h"
			],
			[
				"would",
				"protocol/WOULD BE NICE"
			],
			[
				"comomn.h",
				"protocol/src/virtualgo/Common.h"
			],
			[
				"common.h",
				"protocol/src/virtualgo/Common.h"
			],
			[
				"board.h",
				"protocol/src/virtualgo/Board.h"
			],
			[
				"mat4.fh",
				"external/vectorial/mat4f.h"
			],
			[
				"vec3f.h",
				"external/vectorial/vec3f.h"
			],
			[
				"core.h",
				"protocol/src/core/Core.h"
			],
			[
				"testcore.cpp",
				"protocol/tests/core/TestCore.cpp"
			],
			[
				"collisionresponse.h",
				"protocol/src/virtualgo/CollisionResponse.h"
			],
			[
				"rigidbody.h",
				"protocol/src/virtualgo/RigidBody.h"
			],
			[
				"virtualgo/",
				"protocol/src/virtualgo/Intersection.h"
			],
			[
				"testcubes.cpp",
				"protocol/tests/cubes/TestCubes.cpp"
			],
			[
				"unittest",
				"protocol/tests/protocol/UnitTest.cpp"
			],
			[
				"activation.h",
				"protocol/src/cubes/Activation.h"
			],
			[
				"viewobject.h",
				"protocol/src/cubes/ViewObject.h"
			],
			[
				"engine.h",
				"protocol/src/cubes/Engine.h"
			],
			[
				"simulation.h",
				"protocol/src/cubes/Simulation.h"
			],
			[
				"simulation.cpp",
				"protocol/src/cubes/Simulation.cpp"
			],
			[
				"nvimage.h",
				"external/nvImage/nvImage.h"
			],
			[
				"nvimagedds.cpp",
				"external/nvImage/nvImageDDS.cpp"
			],
			[
				"nvimage.cpp",
				"external/nvImage/nvImage.cpp"
			],
			[
				"nvimagepng.cpp",
				"external/nvimage/nvImagePng.cpp"
			],
			[
				"stonedemo.cpp",
				"src/game/StoneDemo.cpp"
			],
			[
				"stone.frag",
				"data/shaders/Stone.frag"
			],
			[
				"nv_dds.cpp",
				"src/game/nv_dds.cpp"
			],
			[
				"cmft.sh",
				"cmft.sh"
			],
			[
				"stone.vert",
				"data/shaders/Stone.vert"
			],
			[
				"model.h",
				"src/game/Model.h"
			],
			[
				"model.cpp",
				"src/game/Model.cpp"
			],
			[
				"stone.cpp",
				"src/game/StoneDemo.cpp"
			],
			[
				"stonetool.cpp",
				"tools/Stone/StoneTool.cpp"
			],
			[
				"fonts.json",
				"assets/fonts/Fonts.json"
			],
			[
				"meshmanager.cpp",
				"src/game/MeshManager.cpp"
			],
			[
				"mesh.cpp",
				"tools/Stone/ToolMesh.cpp"
			],
			[
				"demo.h",
				"src/game/Demo.h"
			],
			[
				"mesh.h",
				"src/game/Mesh.h"
			],
			[
				"meshmanager.h",
				"src/game/MeshManager.h"
			],
			[
				"model",
				"src/game/Model.h"
			],
			[
				"pbr",
				"PBR"
			],
			[
				"phong.vert",
				"data/shaders/Phong.vert"
			],
			[
				"too",
				"tools/Stone/ToolMesh.cpp"
			],
			[
				"nv_dds.h",
				"src/game/nv_dds.h"
			],
			[
				"stones.cpp",
				"tools/Stone/StoneTool.cpp"
			],
			[
				"phong.frag",
				"data/shaders/Phong.frag"
			],
			[
				"shader.vert",
				"data/shaders/Flat.vert"
			],
			[
				"stonemanager.h",
				"src/game/StoneManager.h"
			],
			[
				"gouraud.vert",
				"data/shaders/Gouraud.vert"
			],
			[
				"stonerender.cpp",
				"src/game/StoneRender.cpp"
			],
			[
				"stonerender.h",
				"src/game/StoneRender.h"
			],
			[
				"meshmnager.h",
				"src/game/MeshManager.h"
			],
			[
				"oal",
				"GOALS"
			],
			[
				"stoneinstanced.vert",
				"data/shaders/StoneInstanced.vert"
			],
			[
				"inputmanager.cpp",
				"src/game/InputManager.cpp"
			],
			[
				"demo.cpp",
				"src/game/StoneDemo.cpp"
			],
			[
				"demomanager.h",
				"src/game/DemoManager.h"
			],
			[
				"global.h",
				"src/game/Global.h"
			],
			[
				"shadermanager.h",
				"src/game/ShaderManager.h"
			],
			[
				"shadermanager.cpp",
				"src/game/ShaderManager.cpp"
			],
			[
				"fontmanager.h",
				"src/game/FontManager.h"
			],
			[
				"stonemanager.cpp",
				"src/game/StoneManager.cpp"
			],
			[
				"fontmanager.cpp",
				"src/game/FontManager.cpp"
			],
			[
				"stone",
				"src/game/StoneManager.cpp"
			],
			[
				"shader",
				"src/game/ShaderManager.cpp"
			],
			[
				"game",
				"src/game/Game.cpp"
			],
			[
				"gameclient",
				"src/game/GameClient.h"
			],
			[
				"consolefunctions.cpp",
				"src/game/ConsoleFunctions.cpp"
			],
			[
				"font.h",
				"src/game/Font.h"
			],
			[
				"shader.h",
				"src/game/ShaderManager.h"
			],
			[
				"fonttool.cpp",
				"tools/Font/FontTool.cpp"
			],
			[
				"console.cp",
				"src/game/Console.cpp"
			],
			[
				"font.cpp",
				"src/game/Font.cpp"
			],
			[
				"stonefrag",
				"data/shaders/StoneInstanced.frag"
			],
			[
				"stoneinstanced.frag",
				"data/shaders/StoneInstanced.frag"
			],
			[
				"font.frag",
				"data/shaders/Font.frag"
			],
			[
				"font.vert",
				"data/shaders/Font.vert"
			],
			[
				"render.cpp",
				"src/game/Render.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
