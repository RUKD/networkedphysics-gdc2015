{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"snapshot",
				"snapshot_mode_data"
			],
			[
				"snap",
				"snapshot_mode_data"
			],
			[
				"STONE",
				"STONE_MODE_HDR_TEST"
			],
			[
				"vec",
				"vectorial"
			],
			[
				"new",
				"network_simulator"
			],
			[
				"playout",
				"playout_delay_buffer"
			],
			[
				"LOK",
				"LOCKSTEP_PACKET_INPUTS"
			],
			[
				"in",
				"input_sliding_window"
			],
			[
				"CommandLin",
				"CommandLineBufferSize"
			],
			[
				"model",
				"modelViewProjection"
			],
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"last",
				"lastConnectedClientTime"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			],
			[
				"datablock",
				"dataBlockReceiver"
			],
			[
				"ClientServerDatABlock",
				"ClientServerDataBlockSender"
			],
			[
				"ClientSer",
				"ClientServerDataBlockSender"
			],
			[
				"test_",
				"test_data_block_send_and_receive_packet_loss"
			],
			[
				"CLIENT_STATE_SENDING",
				"CLIENT_STATE_SENDING_CLIENT_DATA"
			],
			[
				"UpdatESend",
				"UpdateSendClientData"
			],
			[
				"read",
				"readyForConnection"
			],
			[
				"SERVER",
				"SERVER_CLIENT_STATE_READY_FOR_CONNECTION"
			],
			[
				"max",
				"maxServerDataSize"
			],
			[
				"fargmen",
				"fragmentId"
			],
			[
				"ack",
				"ackedFragment"
			],
			[
				"CLIENH_",
				"CLIENT_SERVER_PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_RECEIVING_SERVER_DATA"
			],
			[
				"m_num",
				"m_numServerDataFragments"
			],
			[
				"CLIENT_",
				"CLIENT_SERVER_PACKET_CONNECTION"
			],
			[
				"CreateChann",
				"CreateChannelDataInternal"
			],
			[
				"NUM",
				"NUM_CLIENT_SERVER_PACKETS"
			],
			[
				"PROTOCOL_",
				"PROTOCOL_USE_RESOLVER"
			],
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"client",
				"clientNetworkInterface"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/C++11 (Client).sublime-build",
	"command_palette":
	{
		"height": 147.0,
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/git/protocol"
	],
	"file_history":
	[
		"/Users/gaffer/git/protocol/src/Game/LockstepDemo.h",
		"/Users/gaffer/git/protocol/src/Game/SnapshotDemo.h",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/LockstepDemo.cpp",
		"/Users/gaffer/git/protocol/src/Game/StoneDemo.cpp",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/src/Game/SnapshotDemo.cpp",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/external/ode/CHANGELOG.txt",
		"/Users/gaffer/git/protocol/src/Protocol/SlidingWindow.h",
		"/Users/gaffer/git/protocol/src/Game/StoneDemo.h",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.h",
		"/Users/gaffer/git/protocol/src/Game/Demo.h",
		"/Users/gaffer/git/protocol/src/Protocol/Stream.h",
		"/Users/gaffer/git/protocol/src/Network/Simulator.cpp",
		"/Users/gaffer/git/protocol/src/Network/Simulator.h",
		"/Users/gaffer/git/protocol/WOULD BE NICE",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.cpp",
		"/Users/gaffer/git/protocol/src/Game/CubesDemo.h",
		"/Users/gaffer/git/protocol/src/Game/Cubes.h",
		"/Users/gaffer/git/protocol/data/shaders/Cubes.vert",
		"/Users/gaffer/git/protocol/external/ode/ou/LICENSE-LESSER.TXT",
		"/Users/gaffer/git/protocol/build/ProfileClientServer.make",
		"/Users/gaffer/git/protocol/external/ode/ode/src/quickstep.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerPackets.h",
		"/Users/gaffer/git/protocol/build/StoneTool.make",
		"/Users/gaffer/git/protocol/tests/Protocol/SoakProtocol.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode-config",
		"/Users/gaffer/git/protocol/src/Core/Queue.h",
		"/Users/gaffer/git/protocol/src/Game/CubesDemo.cpp",
		"/Users/gaffer/git/protocol/src/Core/Log.h",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/src/Game/Game.cpp",
		"/Users/gaffer/git/protocol/external/vectorial/quat4f.h",
		"/Users/gaffer/git/protocol/SNAPSHOTS",
		"/Users/gaffer/git/protocol/src/Cubes/View.h",
		"/Users/gaffer/git/protocol/src/Cubes/Game.h",
		"/Users/gaffer/git/protocol/src/Game/Cubes.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/View.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.h",
		"/Users/gaffer/git/protocol/src/Cubes/Hypercube.h",
		"/Users/gaffer/git/protocol/src/Core/Core.h",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.cpp",
		"/Users/gaffer/git/protocol/src/Network/Address.h",
		"/Users/gaffer/git/protocol/src/Cubes/Mathematics.h",
		"/Users/gaffer/git/protocol/src/Game/InputManager.h",
		"/Users/gaffer/git/protocol/data/shaders/Stone.vert",
		"/Users/gaffer/git/protocol/external/ode/ode/src/.deps/collision_quadtreespace.Plo",
		"/Users/gaffer/git/protocol/external/vectorial/vec3f.h",
		"/Users/gaffer/git/protocol/external/vectorial/vec2f.h",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.cpp",
		"/Users/gaffer/git/protocol/external/ode/test-driver",
		"/Users/gaffer/git/protocol/NEXT",
		"/Users/gaffer/git/protocol/NOTES",
		"/Users/gaffer/git/protocol/obj/x64/Debug/Network/Network.d",
		"/Users/gaffer/git/protocol/external/ode/ode/src/joints/.deps/hinge.Plo",
		"/Users/gaffer/git/protocol/external/ode/ode/src/joints/hinge.cpp",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/Posix/SignalTranslator.cpp",
		"/Users/gaffer/git/protocol/external/vectorial/simd4f_neon.h",
		"/Users/gaffer/git/protocol/src/Game/CommandLine.h",
		"/Users/gaffer/git/protocol/src/Game/InterpolationDemo.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/threading_atomics_provs.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/.deps/nextafterf.Plo",
		"/Users/gaffer/git/protocol/src/Network/Address.cpp",
		"/Users/gaffer/Desktop/hacker news",
		"/Users/gaffer/Desktop/backup.txt",
		"/Users/gaffer/git/protocol/src/Network/Interface.h",
		"/Users/gaffer/git/protocol/src/Protocol/PacketFactory.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/fastdot.c",
		"/Users/gaffer/git/protocol/src/Game/Font.cpp",
		"/Users/gaffer/git/protocol/src/Core/Core.cpp",
		"/Users/gaffer/git/protocol/tests/Network/TestAddress.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/TODO",
		"/Users/gaffer/Desktop/backup-gafferongames.com-12-25-2014/public_html/wp-config.php",
		"/Users/gaffer/Downloads/backup-gafferongames.com-12-25-2014/public_html/wp-config.php",
		"/Users/gaffer/git/protocol/src/Protocol/Channel.cpp",
		"/Users/gaffer/git/protocol/tests/Core/TestCore.cpp",
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.cpp",
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.h",
		"/Users/gaffer/git/protocol/src/Game/InputManager.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/DataBlockSender.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/Client/LockstepDemo.d",
		"/Users/gaffer/git/protocol/external/ode/bindings/python/TODO.txt",
		"/Users/gaffer/git/protocol/external/nvImage/rgbe.h",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/ReportAssert.h",
		"/Users/gaffer/git/protocol/src/Protocol/ReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/external/ode/include/ode/compatibility.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/.deps/capsule.Plo",
		"/Users/gaffer/git/protocol/external/ode/ode/src/capsule.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/demo/demo_kinematic.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestSlidingWindow.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/ProtocolConstants.h",
		"/Users/gaffer/git/protocol/external/ode/ode/src/lcp.cpp",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestCommon.h",
		"/Users/gaffer/git/protocol/tests/Protocol/TestConnection.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestPacketFactory.cpp",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/.deps/DeferredTestResult.Plo",
		"/Users/gaffer/git/protocol/external/ode/drawstuff/textures/ground.ppm",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/TestReporterStdout.cpp",
		"/Users/gaffer/git/protocol/external/ode/tests/joints/universal.cpp",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/OPC_IceHook.h",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/OPC_HybridModel.cpp",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/.deps/OPC_HybridModel.Plo",
		"/Users/gaffer/git/protocol/src/Protocol/Packet.h",
		"/Users/gaffer/git/protocol/build/SoakProtocol.make",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/OPC_SphereTriOverlap.h",
		"/Users/gaffer/git/protocol/src/Cubes/Config.h",
		"/Users/gaffer/git/protocol/tests/Protocol/TestStream.cpp",
		"/Users/gaffer/git/protocol/tests/Network/TestPackets.h",
		"/Users/gaffer/git/protocol/tests/Protocol/TestProtocol.cpp",
		"/Users/gaffer/git/protocol/Core.make",
		"/Users/gaffer/git/protocol/build/TestProtocol.make",
		"/Users/gaffer/git/protocol/Network.make",
		"/Users/gaffer/git/protocol/src/Protocol/Object.h",
		"/Users/gaffer/git/protocol/data/shaders/Phong.frag",
		"/Users/gaffer/git/protocol/external/ode/bindings/python/setup.py",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerConstants.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerDataBlock.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerDataBlock.h",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerEnums.h",
		"/Users/gaffer/git/protocol/src/ClientServer/Server.cpp",
		"/Users/gaffer/git/protocol/src/Network/DNSResolver.cpp",
		"/Users/gaffer/git/protocol/src/Core/Config.h",
		"/Users/gaffer/git/protocol/src/Core/Array.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"accumulator",
			"SnapshotDemo",
			"LockstepInternal );",
			"SetTCPMode",
			"LockstepInternal );",
			"deterministic",
			"determinstic",
			"Det",
			"Update(",
			"TCPMode",
			"deterministic",
			"PlayoutDelay",
			"m_internal->mode",
			"Playout",
			"Internal",
			"_BACKSPACE",
			"getAuthorityColor",
			"interacting",
			"interacting == ",
			"PlayerCubeSize",
			"\nPlayerCubeSize",
			"scale",
			"owner",
			"ObjectUpdate",
			"updateState",
			"print",
			"prinf",
			"Instance",
			"GetViewPacket",
			"// ...",
			"Internal",
			"vec3f",
			"Packet",
			"Inter",
			"inter",
			"DEterministic",
			"TCPMode",
			"TCP_MODE",
			"_F!",
			"random_float",
			"random",
			"Ack",
			"Receive",
			"m_packetNumberSend",
			"GenerateAckBits",
			"length >= 0",
			"PlayoutDelay",
			"Playout",
			"ack_sequence",
			"printf",
			"Insert",
			"IsFull",
			"sequence",
			"release",
			"Check",
			"DefaultCheckHandler",
			"CORE_CHECK",
			"port",
			"Inputs",
			"INPUTS",
			"GetObjectInteractions",
			"interactions",
			"UpdateInteractionPairs",
			"SlidingWindow",
			"2014",
			"Copyright (c) 2014,",
			"process",
			"networkSimulator",
			"network::Simulator",
			"Simulator",
			"serialize_",
			"SerializeRead",
			"SlidingWindow",
			"::Initia",
			"Render(",
			"dGetRandomInt",
			"dRandomInt",
			"JOINT_ORDER",
			"RANDOM_JOINT_ORDER",
			"deactivationTime",
			"global.displayWidth",
			"created %d objects",
			"frame[",
			"->Update(",
			"dRandInt",
			"rand()",
			"RANDOM_JOINT_ORDER",
			"RANDOMIZE",
			"dSINGLE",
			"display",
			"displayWidth",
			"displayWidthglob",
			"displayWidth",
			"ResizeDisplay",
			"ResizeDIsplay",
			"BeginScene",
			"render_scene",
			"Clear(",
			"demo->Clear",
			"GetDEmo",
			"bool interpolation",
			"GetViewPacket",
			"mergeViewObjectSets",
			"numSS",
			"CORE_DELETE_ARRAY",
			"origin",
			"+load cubes",
			"+demo cubes",
			"\"+demo cubes",
			"\"Cubes\"",
			"CubesInternal",
			"DebugVertex",
			"Steps",
			"glm::",
			"DEBUG_SHADOW",
			"CAPTURE",
			"UpdateCapture",
			"cubes",
			"Thread",
			"Window",
			"buffer",
			"TGA",
			"SerializeBytes",
			"align",
			"RecordCommandLine",
			"playback",
			"Abort",
			"IsOverflow"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 389.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"todo",
				"TODO"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"lockstepdemo.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"stonedemo.cpp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"snapshotdemo.h",
				"src/Game/SnapshotDemo.h"
			],
			[
				"lockstepdemo.h",
				"src/Game/LockstepDemo.h"
			],
			[
				"demomanager.cpp",
				"src/Game/DemoManager.cpp"
			],
			[
				"snapshotdemo.cpp",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"wouldbenice",
				"WOULD BE NICE"
			],
			[
				"simulator.h",
				"src/Network/Simulator.h"
			],
			[
				"simulator.cpp",
				"src/Network/Simulator.cpp"
			],
			[
				"cubes.h",
				"src/Game/Cubes.h"
			],
			[
				"demomanager.h",
				"src/Game/DemoManager.h"
			],
			[
				"cubesdemo.h",
				"src/Game/CubesDemo.h"
			],
			[
				"demo.h",
				"src/Game/Demo.h"
			],
			[
				"sotnedemo.h",
				"src/Game/StoneDemo.h"
			],
			[
				"stonedemo.h",
				"src/Game/StoneDemo.h"
			],
			[
				"todo-",
				"external/ode/ode-config"
			],
			[
				"stone",
				"src/Game/StoneDemo.cpp"
			],
			[
				"queue.h",
				"src/Core/Queue.h"
			],
			[
				"snapshot",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"cubesdemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"game.h",
				"src/Cubes/Game.h"
			],
			[
				"cubes.cpp",
				"src/Game/Cubes.cpp"
			],
			[
				"hy",
				"src/Cubes/Hypercube.h"
			],
			[
				"view.cpp",
				"src/Cubes/View.cpp"
			],
			[
				"game.cpp",
				"src/Game/Game.cpp"
			],
			[
				"view.h",
				"src/Cubes/View.h"
			],
			[
				"core.h",
				"src/Core/Core.h"
			],
			[
				"acit",
				"src/Cubes/Activation.h"
			],
			[
				"math",
				"src/Cubes/Mathematics.h"
			],
			[
				"hyp",
				"src/Cubes/Hypercube.h"
			],
			[
				"quat4f.h",
				"external/vectorial/quat4f.h"
			],
			[
				"vec3fh",
				"external/vectorial/vec3f.h"
			],
			[
				"vec3f.h",
				"external/vectorial/vec3f.h"
			],
			[
				"stream.h",
				"src/Protocol/Stream.h"
			],
			[
				"tdoo",
				"TODO"
			],
			[
				"woludbe",
				"WOULD BE NICE"
			],
			[
				"wouldbe",
				"WOULD BE NICE"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"commandline.cpp",
				"src/Game/CommandLine.cpp"
			],
			[
				"inter",
				"src/Game/InterpolationDemo.h"
			],
			[
				"change",
				"CHANGES"
			],
			[
				"lockstep",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"lockstep.",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"slidingwindow.h",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"lockstep.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"game",
				"src/Cubes/Game.h"
			],
			[
				"totdo",
				"external/ode/ode/TODO"
			],
			[
				"repl",
				"src/Game/ReplayManager.cpp"
			],
			[
				"replay",
				"src/Game/ReplayManager.cpp"
			],
			[
				"inputmanager.cpp",
				"src/Game/InputManager.cpp"
			],
			[
				"testcore.cpp",
				"tests/Core/TestCore.cpp"
			],
			[
				"lcokstep",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"sliding",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"packet.h",
				"src/Protocol/Packet.h"
			],
			[
				"soakprotocol.cpp",
				"tests/Protocol/SoakProtocol.cpp"
			],
			[
				"testsliding",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"core.cpp",
				"src/Core/Core.cpp"
			],
			[
				"testprotocol.cpp",
				"tests/Protocol/TestProtocol.cpp"
			],
			[
				"testslid",
				"tests/Protocol/TestSlidingWindow.cpp"
			],
			[
				"object.h",
				"src/Protocol/Object.h"
			],
			[
				"address.cpp",
				"src/Network/Address.cpp"
			],
			[
				"address.h",
				"src/Network/Address.h"
			],
			[
				"networkinterfaceh",
				"src/Network/Interface.h"
			],
			[
				"simulation",
				"src/Cubes/Simulation.cpp"
			],
			[
				"packetfactory.h",
				"src/Protocol/PacketFactory.h"
			],
			[
				"testpackets.h",
				"tests/Network/TestPackets.h"
			],
			[
				"clientserverpackets.h",
				"src/ClientServer/ClientServerPackets.h"
			],
			[
				"replaymanager.cpp",
				"src/Game/ReplayManager.cpp"
			],
			[
				"sildingwindow.h",
				"src/Protocol/SlidingWindow.h"
			],
			[
				"console.cpp",
				"src/Game/Console.cpp"
			],
			[
				"console.h",
				"src/Game/Console.h"
			],
			[
				"console",
				"src/Game/Console.cpp"
			],
			[
				"main.cpp",
				"external/ode/tests/main.cpp"
			],
			[
				"bugs",
				"BUGS"
			],
			[
				"would",
				"WOULD BE NICE"
			],
			[
				"chang",
				"external/ode/CHANGELOG.txt"
			],
			[
				"simulation.cpp",
				"src/Cubes/Simulation.cpp"
			],
			[
				"engine",
				"src/Cubes/Engine.h"
			],
			[
				"precision.h",
				"external/ode/include/ode/precision.h"
			],
			[
				"demomaanger.cpp",
				"src/Game/DemoManager.cpp"
			],
			[
				"viewobject.h",
				"src/Cubes/ViewObject.h"
			],
			[
				"view",
				"src/Cubes/View.h"
			],
			[
				"cubse.h",
				"src/Game/Cubes.h"
			],
			[
				"hanges",
				"CHANGES"
			],
			[
				"cubedemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"replaymanager.h",
				"src/Game/ReplayManager.h"
			],
			[
				"render.cpp",
				"src/Game/Render.cpp"
			],
			[
				"util.cpp",
				"src/Game/Util.cpp"
			],
			[
				"inputmanager.h",
				"src/Game/InputManager.h"
			],
			[
				"commandline.h",
				"src/Game/CommandLine.h"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"global.h",
				"src/Game/Global.h"
			],
			[
				"command",
				"src/Game/CommandLine.cpp"
			],
			[
				"steram.h",
				"src/Protocol/Stream.h"
			],
			[
				"messages.h",
				"src/Game/GameMessages.h"
			],
			[
				"input",
				"src/Game/InputManager.h"
			],
			[
				"mat4f.h",
				"external/vectorial/mat4f.h"
			],
			[
				"cube.h",
				"src/Cubes/Cubes.h"
			],
			[
				"",
				"src/Cubes/Hypercube.h"
			],
			[
				"hype",
				"src/Cubes/Hypercube.h"
			],
			[
				"interpolationdemo.cpp",
				"src/Game/InterpolationDemo.cpp"
			],
			[
				"interpolationdemo.h",
				"src/Game/InterpolationDemo.h"
			],
			[
				"cubedemo.h",
				"src/Game/CubesDemo.h"
			],
			[
				"cubedemo",
				"src/Game/CubesDemo.cpp"
			],
			[
				"cubes.frag",
				"data/shaders/Cubes.frag"
			],
			[
				"config.h",
				"src/Cubes/Config.h"
			],
			[
				"debug.vert",
				"data/shaders/Debug.vert"
			],
			[
				"server.cpp",
				"src/ClientServer/Server.cpp"
			],
			[
				"shadow.frag",
				"data/shaders/Shadow.frag"
			],
			[
				"shadow.vert",
				"data/shaders/Shadow.vert"
			],
			[
				"model.cpp",
				"src/Game/Model.cpp"
			],
			[
				"activation.cpp",
				"src/Cubes/Activation.cpp"
			],
			[
				"config",
				"src/Cubes/Config.h"
			],
			[
				"activation.h",
				"src/Cubes/Activation.h"
			],
			[
				"cubes",
				"data/shaders/Cubes.vert"
			],
			[
				"model.h",
				"src/Game/Model.h"
			],
			[
				"mesh.cpp",
				"src/Game/MeshManager.cpp"
			],
			[
				"font.cpp",
				"src/Game/Font.cpp"
			],
			[
				"cubeslit.vert",
				"data/shaders/CubesLit.vert"
			],
			[
				"cubeslit.frag",
				"data/shaders/CubesLit.frag"
			],
			[
				"meshmanager.cpp",
				"src/Game/MeshManager.cpp"
			],
			[
				"stone.cp",
				"src/Game/StoneDemo.cpp"
			],
			[
				"client.cpp",
				"src/ClientServer/Client.cpp"
			],
			[
				"mathem",
				"src/Cubes/Mathematics.h"
			],
			[
				"cubeunlit.vert",
				"data/shaders/CubeUnlit.vert"
			],
			[
				"cubelit.vert",
				"data/shaders/CubeLit.vert"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
