{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"min",
				"min_ticks_ahead"
			],
			[
				"old_st",
				"oldest_input_in_packet"
			],
			[
				"ready_to_",
				"ready_to_apply_adjustment_offset"
			],
			[
				"time_",
				"time_last_dropped_input"
			],
			[
				"client",
				"client_input_data"
			],
			[
				"server_cet",
				"server_get_client_input"
			],
			[
				"Input",
				"InputSlidingWindowSize"
			],
			[
				"ready",
				"ready_to_apply_sync"
			],
			[
				"client_",
				"client_sync_data"
			],
			[
				"CLIENT",
				"CLIENT_SENDING_CONNECT_REQUEST"
			],
			[
				"time",
				"time_last_packet_received"
			],
			[
				"tim",
				"time_last_packet_received"
			],
			[
				"PACKET",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"PACKET_TYPE",
				"PACKET_TYPE_INPUT"
			],
			[
				"PACKET_TYPE_",
				"PACKET_TYPE_CONNECTION_DENIED"
			],
			[
				"PACK",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"COMP",
				"COMPRESSION_MODE_ORIENTATION"
			],
			[
				"COM",
				"COMPRESSION_MODE_NO_VELOCITY"
			],
			[
				"SYNC_MODE_",
				"SYNC_MODE_SMOOTHING"
			],
			[
				"position",
				"position_error_dist_squared"
			],
			[
				"pos",
				"position_error"
			],
			[
				"STATE",
				"STATEFUL_MODE_INPUT_AND_STATE"
			],
			[
				"Max",
				"MaxCubesPerPacket"
			],
			[
				"Priority",
				"CubePriorityInfo"
			],
			[
				"Quant",
				"QuantizedPositionBoundXY"
			],
			[
				"Position",
				"QuantizedPositionBoundXY"
			],
			[
				"Quantiz",
				"QuantizedSnapshotWithVelocity"
			],
			[
				"Qua",
				"QuantizedCubeState"
			],
			[
				"linera_",
				"linear_velocity_y"
			],
			[
				"DELTA_MODE",
				"DELTA_MODE_RELATIVE_INDEX"
			],
			[
				"COMPRESSION_MODE",
				"COMPRESSION_MODE_POSITION"
			],
			[
				"abso",
				"absolute_position_bits"
			],
			[
				"absol",
				"absolute_quaternion_bits"
			],
			[
				"ab",
				"absolute_quaternion_bits"
			],
			[
				"Rel",
				"RelativeQuaternionLargeW"
			],
			[
				"quater",
				"quaternion_negative_w"
			],
			[
				"COMPRESSION",
				"COMPRESSION_MODE_QUANTIZE_POSITION"
			],
			[
				"QuantizedPosition",
				"QuantizedPositionBoundXY"
			],
			[
				"snap",
				"snapshot_sequence_buffer"
			],
			[
				"CONTEXT_SNAP",
				"CONTEXT_SNAPSHOT_SLIDING_WINDOW"
			],
			[
				"ntework",
				"network_simulator"
			],
			[
				"snapshot",
				"snapshot_sliding_window"
			],
			[
				"m_ba",
				"m_bandwidthExclude"
			],
			[
				"received",
				"received_snapshot_this_frame"
			],
			[
				"COMPRES",
				"COMPRESSION_MODE_UNCOMPRESSED"
			],
			[
				"INT",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT_MODE_",
				"SNAPSHOT_MODE_LINEAR_INTERPOLATION_10PPS"
			],
			[
				"SNAPSHOT_MODE",
				"SNAPSHOT_MODE_NAIVE_60PPS_JITTER"
			],
			[
				"interpo",
				"interpolation_start_time"
			],
			[
				"inter",
				"interpolation_start_time"
			],
			[
				"SNAPSHOT_IN",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT",
				"SNAPSHOT_INTERPOLATION_LINEAR"
			],
			[
				"LOCK",
				"LOCKSTEP_MODE_DETERMINISTIC"
			],
			[
				"mode",
				"snapshot_mode_data"
			],
			[
				"STONE",
				"STONE_MODE_HDR_TEST"
			],
			[
				"vec",
				"vectorial"
			],
			[
				"new",
				"network_simulator"
			],
			[
				"playout",
				"playout_delay_buffer"
			],
			[
				"LOK",
				"LOCKSTEP_PACKET_INPUTS"
			],
			[
				"in",
				"input_sliding_window"
			],
			[
				"CommandLin",
				"CommandLineBufferSize"
			],
			[
				"model",
				"modelViewProjection"
			],
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"last",
				"lastConnectedClientTime"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			],
			[
				"datablock",
				"dataBlockReceiver"
			],
			[
				"ClientServerDatABlock",
				"ClientServerDataBlockSender"
			],
			[
				"ClientSer",
				"ClientServerDataBlockSender"
			],
			[
				"test_",
				"test_data_block_send_and_receive_packet_loss"
			],
			[
				"CLIENT_STATE_SENDING",
				"CLIENT_STATE_SENDING_CLIENT_DATA"
			],
			[
				"UpdatESend",
				"UpdateSendClientData"
			],
			[
				"read",
				"readyForConnection"
			],
			[
				"SERVER",
				"SERVER_CLIENT_STATE_READY_FOR_CONNECTION"
			],
			[
				"max",
				"maxServerDataSize"
			],
			[
				"fargmen",
				"fragmentId"
			],
			[
				"ack",
				"ackedFragment"
			],
			[
				"CLIENH_",
				"CLIENT_SERVER_PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_RECEIVING_SERVER_DATA"
			],
			[
				"m_num",
				"m_numServerDataFragments"
			],
			[
				"CLIENT_",
				"CLIENT_SERVER_PACKET_CONNECTION"
			],
			[
				"CreateChann",
				"CreateChannelDataInternal"
			],
			[
				"NUM",
				"NUM_CLIENT_SERVER_PACKETS"
			],
			[
				"PROTOCOL_",
				"PROTOCOL_USE_RESOLVER"
			],
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					""
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					"Run"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					""
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Lua/Lua.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					""
				],
				[
					"Packages/User/Markdown Render [Grip].sublime-build",
					"Run"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/git/protocol"
	],
	"file_history":
	[
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/libyojimbo/.git/MERGE_MSG",
		"/Users/gaffer/git/protocol/premake5.lua",
		"/Users/gaffer/git/protocol/src/network/BSDSocket.cpp",
		"/Users/gaffer/git/protocol/src/protocol/Stream.h",
		"/Users/gaffer/git/protocol/src/cubes/Game.h",
		"/Users/gaffer/git/protocol/src/game/CompressionDemo.cpp",
		"/Users/gaffer/git/protocol/src/game/Cubes.cpp",
		"/Users/gaffer/git/protocol/src/virtualgo/Intersection.h",
		"/Users/gaffer/git/protocol/src/virtualgo/CollisionDetection.h",
		"/Users/gaffer/git/protocol/tests/VirtualGo/TestVirtualGo.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/SoakProtocol.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/ClientServerContext.cpp",
		"/Users/gaffer/Desktop/SOW Ref 16101CIGLLC_SOW01",
		"/Users/gaffer/git/protocol/src/Cubes/Activation.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestConnection.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/tests/Protocol/TestChannelStructure.h",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/tests/ClientServer/TestChannelStructure.h",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.cpp",
		"/usr/local/include/freetype2/freetype/config/ftheader.h",
		"/Users/gaffer/git/protocol/tools/Font/FontTool.cpp",
		"/usr/local/include/freetype2/ft2build.h",
		"/Users/gaffer/git/tests/Protocol/TestChannelStructure.h",
		"/Users/gaffer/git/tests/Protocol/TestConnection.cpp",
		"/Users/gaffer/git/tests/Protocol/TestReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/src/protocol/Channel.h",
		"/Users/gaffer/git/protocol/src/protocol/ReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/src/clientServer/Client.h",
		"/Users/gaffer/git/protocol/src/clientServer/Server.h",
		"/Users/gaffer/git/tests/ClientServer/TestChannelStructure.h",
		"/Users/gaffer/git/protocol/src/Core/Memory.cpp",
		"/Users/gaffer/git/protocol/src/core/Memory.h",
		"/Users/gaffer/git/libyojimbo/premake5.lua",
		"/Users/gaffer/git/tools/Font/FontTool.cpp",
		"/Users/gaffer/git/protocol/src/ClientServer/Client.cpp",
		"/Users/gaffer/git/protocol/PBR",
		"/Users/gaffer/git/protocol/SLIDES",
		"/Users/gaffer/git/protocol/GOALS",
		"/Users/gaffer/git/protocol/SNAPSHOTS",
		"/Users/gaffer/git/protocol/NEXT",
		"/Users/gaffer/git/protocol/NOTES",
		"/Users/gaffer/git/protocol/WOULD BE NICE",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/BUGS",
		"/Users/gaffer/git/cubes/protocol.h",
		"/Users/gaffer/git/cubes/packets.h",
		"/Users/gaffer/git/cubes/premake4.lua",
		"/Users/gaffer/git/cubes/entity.h",
		"/Users/gaffer/git/cubes/cubes.h",
		"/Users/gaffer/git/cubes/world.h",
		"/Users/gaffer/git/cubes/game.cpp",
		"/Users/gaffer/git/cubes/snapshot.h",
		"/Users/gaffer/git/cubes/TODO",
		"/Users/gaffer/git/cubes/CHANGES",
		"/Users/gaffer/git/cubes/WOULD BE NICE",
		"/Users/gaffer/git/cubes/physics.h",
		"/Users/gaffer/git/cubes/server.cpp",
		"/Users/gaffer/git/cubes/vectorial/quat4f.h",
		"/Users/gaffer/git/cubes/physics_ode.cpp",
		"/Users/gaffer/git/cubes/render.cpp",
		"/Users/gaffer/git/cubes/client.cpp",
		"/Users/gaffer/git/cubes/const.h",
		"/Users/gaffer/git/cubes/game.h",
		"/Users/gaffer/git/cubes/PLANNING",
		"/Users/gaffer/git/cubes/vectorial/vec3f.h",
		"/Users/gaffer/git/cubes/core.h",
		"/Users/gaffer/git/cubes/obj/x64/Release/client/physics_ode.d",
		"/Users/gaffer/git/cubes/network.cpp",
		"/Users/gaffer/git/cubes/SYNCHRONIZE",
		"/Users/gaffer/git/cubes/network.h",
		"/Users/gaffer/git/cubes/untitled",
		"/Users/gaffer/git/cubes/GOAL",
		"/Users/gaffer/git/cubes/platform.h",
		"/Users/gaffer/git/cubes/obj/x64/Debug/client/physics_ode.d",
		"/Users/gaffer/Desktop/physics intro draft",
		"/Users/gaffer/git/cubes/client",
		"/Users/gaffer/git/server.cpp",
		"/Users/gaffer/git/cubes/.git/MERGE_MSG",
		"/Users/gaffer/git/cubes/cubes",
		"/Users/gaffer/git/protocol/src/Cubes/View.cpp",
		"/Users/gaffer/git/protocol/src/Game/Render.cpp",
		"/Users/gaffer/git/protocol/src/Game/Cubes.cpp",
		"/Users/gaffer/git/protocol/src/Game/ShaderManager.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/View.h",
		"/Users/gaffer/git/protocol/src/Cubes/Config.h",
		"/Users/gaffer/git/protocol/data/shaders/Subroutine.vert",
		"/Users/gaffer/git/protocol/data/shaders/Subroutine.frag",
		"/Users/gaffer/git/protocol/src/Game/Cubes.h",
		"/Users/gaffer/git/protocol/src/Game/Render.h",
		"/Users/gaffer/git/protocol/src/Game/ShaderManager.h",
		"/Users/gaffer/git/protocol/src/Cubes/Game.h",
		"/Users/gaffer/git/protocol/src/Cubes/Mathematics.h",
		"/Users/gaffer/git/protocol/src/Game/SyncDemo.cpp",
		"/Users/gaffer/git/protocol/src/Game/Snapshot.h",
		"/Users/gaffer/git/protocol/src/Game/DeltaDemo.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/src/ode.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Simulation.h",
		"/Users/gaffer/git/protocol/src/Game/Game.cpp",
		"/Users/gaffer/git/protocol/src/Game/Demo.h",
		"/Users/gaffer/git/protocol/src/Game/DemoManager.cpp",
		"/Users/gaffer/git/protocol/tests/Cubes/TestCubes.cpp",
		"/Users/gaffer/git/protocol/src/Game/DeltaDemo.h",
		"/Users/gaffer/git/protocol/src/Protocol/Packet.h",
		"/Users/gaffer/git/protocol/src/Game/ReplayManager.cpp",
		"/Users/gaffer/git/protocol/src/Network/Simulator.h",
		"/Users/gaffer/git/protocol/src/Core/Core.h",
		"/Users/gaffer/git/protocol/src/VirtualGo/CollisionResponse.h",
		"/Users/gaffer/git/protocol/output/delta_quaternion.txt",
		"/Users/gaffer/git/protocol/scripts/delta_angle.txt",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/MemoryOutStream.cpp",
		"/Users/gaffer/git/protocol/src/Game/Model.cpp",
		"/Users/gaffer/git/protocol/external/ode/OPCODE/.deps/OPC_Model.Plo",
		"/Users/gaffer/git/compression/compression.cpp",
		"/Users/gaffer/git/protocol/src/Protocol/BitArray.h",
		"/Users/gaffer/git/protocol/src/VirtualGo/Biconvex.cpp",
		"/Users/gaffer/git/protocol/src/Cubes/Hypercube.h",
		"/Users/gaffer/git/protocol/output/delta_data.bin",
		"/Users/gaffer/git/protocol/output/delta_smallest_three.txt",
		"/Users/gaffer/git/protocol/external/ode/tests/UnitTest++/src/TestDetails.cpp",
		"/Users/gaffer/git/protocol/src/Game/CompressionDemo.cpp",
		"/Users/gaffer/git/protocol/scripts/optimize_position.rb",
		"/Users/gaffer/git/protocol/src/Network/Simulator.cpp",
		"/Users/gaffer/git/protocol/src/Game/SyncDemo.h",
		"/Users/gaffer/git/protocol/SORTED POST SEND",
		"/Users/gaffer/git/protocol/external/ode/ode/src/plane.cpp",
		"/Users/gaffer/git/protocol/external/ode/ode/src/.deps/cylinder.Plo"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO,-WOULDBENICE",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"cd ",
			"\"build\"",
			"random_vector",
			"relative_index",
			"serialize_orientation",
			"serialize_vector",
			"serialize_float",
			"send_packets",
			"cube_position = ",
			"active",
			"client.cpp",
			"active = ",
			"send_packets",
			"dropped input",
			"input_",
			"num_inputs",
			"active = ",
			"client_post_frame",
			"active = ",
			"cube_orientation = ",
			"client_appyl",
			"synchronizing",
			".offset",
			"client_sync_data[client_slot].offset",
			"sync_offset",
			"bracketed",
			"reconnect",
			"bracketing",
			"client side prediction = ",
			"apply_time",
			"client_add_input",
			"ClientFramesPerSecond",
			"server_tick",
			"ready_to_apply_ad",
			"ready_to_apply",
			"most_recent_input",
			"add_input",
			"client adjustment",
			"adjustment",
			"started bc",
			"receive_packets",
			"read_packets",
			"SnapshotPacket",
			"adjustment",
			"clamp(",
			"clamp",
			"get_client",
			"dropped",
			"most_recent_input",
			"reconnect",
			"SyncData()",
			"bracketing",
			"suppress_send",
			"send_packets",
			"reconnect",
			"SnapshotPacket",
			"adjustment",
			"bracket_adjustment",
			"client_tick",
			"process",
			"client_tick",
			"// todo:",
			"adjustment",
			"ready_to_apply",
			"synchronizing",
			"adjustment = ",
			"adjustment",
			"bracketing",
			"snapshot",
			"bracketing = ",
			"bracketing",
			"todo",
			"adjustment",
			"bracket_sequenc",
			"bracketing",
			"sync_data",
			"bracketing",
			"offset = ",
			"printf",
			"offset = ",
			"synchronized",
			"client_sync_data",
			"printf",
			"server_find_client_slot",
			"client_conec",
			"guid",
			"connect",
			"read_packet",
			"server_address",
			"serialize_bits",
			"SyncSafety",
			"get_client_input",
			"inputs",
			"latest_input_tick",
			"send_packets",
			"SyncSafety",
			"Sync",
			"SyncSafety",
			".offset",
			"world.frame",
			"client_tick = ",
			"world.tick",
			"time_sync",
			"synchronizing",
			".offset",
			"sync_offset",
			"time_sync",
			"client_update",
			"synchronizing",
			"synchronized",
			"snapshot_packet",
			"synchronizing",
			"synchroniing",
			"client.sync",
			"packet.tick",
			" \n",
			".synchro",
			"CLIENT_CONNECTED",
			"synchronizing",
			"connected",
			"SnapshotPacket",
			"InputPacket",
			"received",
			"send_packets",
			"process_packet",
			"write_packet",
			"HEADLESS",
			"Time"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SequenceBuffer",
			"sequence_buffer",
			"SequenceBuffer",
			"sliding_window",
			"network_buffer.",
			"NetworkBuffer<",
			"ring_buffer",
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 341.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"changes",
				"CHANGES"
			],
			[
				"pre",
				"premake5.lua"
			],
			[
				"todo",
				"TODO"
			],
			[
				"testchannel",
				"tests/ClientServer/TestChannelStructure.h"
			],
			[
				"testconnection.cpp",
				"tests/Protocol/TestConnection.cpp"
			],
			[
				"pbr",
				"PBR"
			],
			[
				"slid",
				"SLIDES"
			],
			[
				"goals",
				"GOALS"
			],
			[
				"snap",
				"SNAPSHOTS"
			],
			[
				"next",
				"NEXT"
			],
			[
				"notes",
				"NOTES"
			],
			[
				"would",
				"WOULD BE NICE"
			],
			[
				"",
				"BUGS"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"entity.h",
				"entity.h"
			],
			[
				"cubes.h",
				"cubes.h"
			],
			[
				"world.h",
				"world.h"
			],
			[
				"game.cpp",
				"game.cpp"
			],
			[
				"snapshot.h",
				"snapshot.h"
			],
			[
				"cha",
				"CHANGES"
			],
			[
				"wouldbe",
				"WOULD BE NICE"
			],
			[
				"client.cpp",
				"client.cpp"
			],
			[
				"server.cpp",
				"server.cpp"
			],
			[
				"render",
				"render.cpp"
			],
			[
				"packets.h",
				"packets.h"
			],
			[
				"protocol.h",
				"protocol.h"
			],
			[
				"const.h",
				"const.h"
			],
			[
				"game.h",
				"game.h"
			],
			[
				"physics",
				"physics_ode.cpp"
			],
			[
				"quat",
				"vectorial/quat4f.h"
			],
			[
				"physics.h",
				"physics.h"
			],
			[
				"wouldbenice",
				"WOULD BE NICE"
			],
			[
				"serer.cpp",
				"server.cpp"
			],
			[
				"vec3f.h",
				"vectorial/vec3f.h"
			],
			[
				"plann",
				"PLANNING"
			],
			[
				"client.h",
				"obj/x64/Release/client/physics_ode.d"
			],
			[
				"wouldenice",
				"WOULD BE NICE"
			],
			[
				"planning",
				"PLANNING"
			],
			[
				"cilent.cpp",
				"client.cpp"
			],
			[
				"network.h",
				"network.h"
			],
			[
				"network.cpp",
				"network.cpp"
			],
			[
				"tood",
				"TODO"
			],
			[
				"packtes.h",
				"packets.h"
			],
			[
				"woludbe",
				"WOULD BE NICE"
			],
			[
				"goal",
				"GOAL"
			],
			[
				"client",
				"client.cpp"
			],
			[
				"plato.mh",
				"platform.h"
			],
			[
				"cliet.cpp",
				"client.cpp"
			],
			[
				"too",
				"TODO"
			],
			[
				"premake.",
				"premake4.lua"
			],
			[
				"netwokr.cpp",
				"network.cpp"
			],
			[
				"netwokr.h",
				"network.h"
			],
			[
				"platform.h",
				"platform.h"
			],
			[
				"render.cpp",
				"src/Game/Render.cpp"
			],
			[
				"view.cpp",
				"src/Cubes/View.cpp"
			],
			[
				"view.h",
				"src/Cubes/View.h"
			],
			[
				"sub",
				"data/shaders/Subroutine.vert"
			],
			[
				"config.h",
				"src/Cubes/Config.h"
			],
			[
				"render.h",
				"src/Game/Render.h"
			],
			[
				"cubes.cpp",
				"src/Game/Cubes.cpp"
			],
			[
				"shadermanager.cpp",
				"src/Game/ShaderManager.cpp"
			],
			[
				"shader",
				"src/Game/ShaderManager.h"
			],
			[
				"mathem",
				"src/Cubes/Mathematics.h"
			],
			[
				"game.",
				"src/Cubes/Game.h"
			],
			[
				"syncdemo.cpp",
				"src/Game/SyncDemo.cpp"
			],
			[
				"deltademo.cpp",
				"src/Game/DeltaDemo.cpp"
			],
			[
				"demo",
				"src/Game/DemoManager.cpp"
			],
			[
				"demo.cpp",
				"src/Game/SyncDemo.cpp"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"simulation.h",
				"src/Cubes/Simulation.h"
			],
			[
				"simulation.cpp",
				"src/Cubes/Simulation.cpp"
			],
			[
				"core.h",
				"src/Core/Core.h"
			],
			[
				"delta_data.bin",
				"output/delta_data.bin"
			],
			[
				"simulator.cpp",
				"src/Network/Simulator.cpp"
			],
			[
				"com",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"sync",
				"src/Game/SyncDemo.cpp"
			],
			[
				"compressiondemo.cpp",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"lockstep.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"lockstepdemo.cpp",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"lock",
				"src/Game/LockstepDemo.cpp"
			],
			[
				"game",
				"src/Cubes/Game.h"
			],
			[
				"cubedemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"snapshotdemo.cpp",
				"src/Game/SnapshotDemo.cpp"
			],
			[
				"cubesdemo.cpp",
				"src/Game/CubesDemo.cpp"
			],
			[
				"cubesconfig.h",
				"src/Cubes/Config.h"
			],
			[
				"bugs",
				"BUGS"
			],
			[
				"bugn",
				"external/ode/ode/demo/bunny_geom.h"
			],
			[
				"quat4f.h",
				"external/vectorial/quat4f.h"
			],
			[
				"optimize_position.rb",
				"scripts/optimize_position.rb"
			],
			[
				"optimize_relative_quaternion.rb",
				"scripts/optimize_relative_quaternion.rb"
			],
			[
				"opti",
				"scripts/optimize_smallest_three.rb"
			],
			[
				"optimize_smallest_three.rb",
				"scripts/optimize_smallest_three.rb"
			],
			[
				"delta_stats.rb",
				"scripts/delta_stats.rb"
			],
			[
				"rela",
				"output/relative_quaternion_values.txt"
			],
			[
				"relative_qua",
				"output/relative_quaternion_values.txt"
			],
			[
				"delta_relativ",
				"output/delta_relative_quaternion.txt"
			],
			[
				"relative_quaternion_values.txt",
				"output/relative_quaternion_values.txt"
			],
			[
				"optimiz",
				"scripts/optimize_smallest_three.rb"
			],
			[
				"common.h",
				"src/VirtualGo/Common.h"
			],
			[
				"vec4f.h",
				"external/vectorial/vec4f.h"
			],
			[
				"math.h",
				"src/Cubes/Mathematics.h"
			],
			[
				"simulat",
				"src/Network/Simulator.h"
			],
			[
				"snapshot",
				"src/Game/Snapshot.h"
			],
			[
				"ch",
				"CHANGES"
			],
			[
				"simulatino.h",
				"src/Cubes/Simulation.h"
			],
			[
				"compression",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"stream.h",
				"src/Protocol/Stream.h"
			],
			[
				"commandline.cpp",
				"src/Game/CommandLine.cpp"
			],
			[
				"demomanager.cpp",
				"src/Game/DemoManager.cpp"
			],
			[
				"syncdemo.h",
				"src/Game/SyncDemo.h"
			],
			[
				"statefuldemo.cpp",
				"src/Game/StatefulDemo.cpp"
			],
			[
				"stateful",
				"src/Game/StatefulDemo.h"
			],
			[
				"math",
				"src/Cubes/Mathematics.h"
			],
			[
				"hyper",
				"src/Cubes/Hypercube.h"
			],
			[
				"cube.h",
				"src/Game/Cubes.h"
			],
			[
				"hanges",
				"CHANGES"
			],
			[
				"snapsh",
				"src/Game/Snapshot.h"
			],
			[
				"compress",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"state",
				"src/Game/StatefulDemo.cpp"
			],
			[
				"comm",
				"src/Game/CommandLine.cpp"
			],
			[
				"statefuldemo.h",
				"src/Game/StatefulDemo.h"
			],
			[
				"compre",
				"src/Game/CompressionDemo.cpp"
			],
			[
				"deltademo.cp",
				"src/Game/DeltaDemo.cpp"
			],
			[
				"delta",
				"src/Game/DeltaDemo.h"
			],
			[
				"deltademo.h",
				"src/Game/DeltaDemo.h"
			],
			[
				"shadow.vert",
				"data/shaders/Shadow.vert"
			],
			[
				"simulator.h",
				"src/Network/Simulator.h"
			],
			[
				"packet.cpp",
				"tests/Protocol/TestPacketFactory.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
