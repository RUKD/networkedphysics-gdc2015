{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Block",
				"BlockMessageType"
			],
			[
				"RES",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"RESOL",
				"RESOLVE_IN_PROGRESS"
			],
			[
				"R",
				"ResolveResult"
			],
			[
				"RESOLVE",
				"RESOLVE_SUCCEEDED"
			],
			[
				"REsolv",
				"ResolveWrapper"
			],
			[
				"BSD_SOCKET_COUNTER_SERIAL",
				"BSD_SOCKET_COUNTER_SERIALIZE_READ_OVERFLOW"
			],
			[
				"CLIENT_ERROR_Co",
				"CLIENT_ERROR_ConnectionError"
			],
			[
				"REL",
				"RELIABLE_MESSAGE_CHANNEL_ERROR_SEND_QUEUE_FULL"
			],
			[
				"BSD_S",
				"BSD_SOCKET_ERROR_NONE"
			],
			[
				"max",
				"maxMessagesPerPacket"
			],
			[
				"Small",
				"MaxSmallBlockSize"
			],
			[
				"resol",
				"ResolveWrapper"
			],
			[
				"client",
				"clientNetworkInterface"
			],
			[
				"m_oldest",
				"m_oldestUnackedMessageId"
			],
			[
				"m_",
				"m_oldestUnackedMessageId"
			],
			[
				"SendLrg",
				"SendLargeBlockData"
			],
			[
				"SERVER_CLIENT_",
				"SERVER_CLIENT_Connected"
			],
			[
				"SERVER_CLIENT",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_ERROR_Td",
				"CLIENT_ERROR_ConnectionTimedOut"
			],
			[
				"CLIENT_ERROR_Conn",
				"CLIENT_ERROR_ConnectionRequestDenied"
			],
			[
				"SERVER",
				"SERVER_CLIENT_Connected"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_ReadyForConnection"
			],
			[
				"CLIENT_",
				"SERVER_CLIENT_Disconnected"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_ResolvingHostname"
			],
			[
				"SERE",
				"SERVER_CLIENT_SendingChallenge"
			],
			[
				"CLIENT_ERROR",
				"CLIENT_ERROR_ConnectionRequestTimedOut"
			],
			[
				"Disconnec",
				"DisconnectAndSetError"
			],
			[
				"m_conn",
				"m_sendingConnectionRequestData"
			],
			[
				"res",
				"resolveHostnameTimeout"
			],
			[
				"channel",
				"messageChannelConfig"
			],
			[
				"m_receive",
				"m_receiveLargeBlock"
			],
			[
				"resend",
				"resendRate"
			],
			[
				"fragment",
				"blockFragmentSize"
			],
			[
				"frag",
				"largeBlockFragmentSize"
			],
			[
				"m_receiv",
				"m_receiveMessageId"
			],
			[
				"Pro",
				"ProcessPacketFailures"
			],
			[
				"disca",
				"PacketsDiscarded"
			],
			[
				"ack_bits",
				"test_generate_ack_bits"
			],
			[
				"m_rec",
				"m_receive_queue"
			],
			[
				"Receiv",
				"ReceivePacket"
			],
			[
				"IP",
				"IPv6"
			],
			[
				"Update",
				"UpdatePartyView_Blocking"
			],
			[
				"App",
				"ApplyImpulseAtWorldPoint"
			],
			[
				"Find",
				"FindObjectsInRadius"
			],
			[
				"generateVBandIB",
				"generateVBAndIBFromTexturedMesh"
			],
			[
				"inc",
				"incrementCounter"
			],
			[
				"is",
				"isPointOnBoard"
			],
			[
				"cont",
				"contentScaleFactor"
			],
			[
				"Collision",
				"CollisionResponseWithFriction"
			],
			[
				"true",
				"TestRunner"
			],
			[
				"PC",
				"PC_LE"
			],
			[
				"num",
				"numGameModes"
			],
			[
				"gamemodes",
				"gameModes"
			],
			[
				"getg",
				"getGameModeId"
			],
			[
				"NET_PLATFORM",
				"NET_PLATFORM_PS3"
			],
			[
				"test_async",
				"test_async_sockets_node_mesh"
			],
			[
				"Calculate",
				"CalculateChunkSizeWithHeader"
			],
			[
				"send",
				"sendChunkSlices"
			],
			[
				"Buffered",
				"NumBufferedPackets"
			],
			[
				"NumEvents",
				"NumEventsToSend"
			],
			[
				"receive",
				"receiveEventId"
			],
			[
				"pendingAck",
				"pendingAckQueue"
			],
			[
				"meas",
				"measuredBits"
			],
			[
				"cnn",
				"ndlConstants"
			]
		]
	},
	"buffers":
	[
		{
			"file": "TODO",
			"settings":
			{
				"buffer_size": 9390,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/C++11.sublime-build",
	"command_palette":
	{
		"height": 147.0,
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 647.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/gaffer/git/protocol/include/Memory.h",
		"/Users/gaffer/git/protocol/include/NetworkSimulator.h",
		"/Users/gaffer/git/protocol/include/Packets.h",
		"/Users/gaffer/git/protocol/include/SlidingWindow.h",
		"/Users/gaffer/git/protocol/src/BSDSocket.cpp",
		"/Users/gaffer/git/protocol/src/Client.cpp",
		"/Users/gaffer/git/protocol/src/Connection.cpp",
		"/Users/gaffer/git/protocol/src/DNSResolver.cpp",
		"/Users/gaffer/git/protocol/src/Memory.cpp",
		"/Users/gaffer/git/protocol/src/MicroAllocator.cpp",
		"/Users/gaffer/git/protocol/src/NetworkSimulator.cpp",
		"/Users/gaffer/git/protocol/src/ReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/src/Server.cpp",
		"/Users/gaffer/git/protocol/tests/SoakTest.cpp",
		"/Users/gaffer/git/protocol/tests/TestBlock.cpp",
		"/Users/gaffer/git/protocol/tests/TestChannelStructure.h",
		"/Users/gaffer/git/protocol/tests/TestClientServer.cpp",
		"/Users/gaffer/git/protocol/tests/TestConnection.cpp",
		"/Users/gaffer/git/protocol/tests/TestMessages.h",
		"/Users/gaffer/git/protocol/tests/TestPackets.h",
		"/Users/gaffer/git/protocol/include/MessageFactory.h",
		"/Users/gaffer/git/protocol/include/MicroAllocator.h",
		"/Users/gaffer/git/protocol/tests/UnitTest.cpp",
		"/Users/gaffer/git/protocol/TODO",
		"/Users/gaffer/git/protocol/tests/TestNetworkInterface.cpp",
		"/Users/gaffer/git/protocol/tests/TestCommon.cpp",
		"/Users/gaffer/git/protocol/src/Address.cpp",
		"/Users/gaffer/git/protocol/include/Resolver.h",
		"/Users/gaffer/git/protocol/tests/TestBSDSocket.cpp",
		"/Users/gaffer/git/protocol/include/Common.h",
		"/Users/gaffer/git/protocol/include/BSDSocket.h",
		"/Users/gaffer/git/protocol/include/DNSResolver.h",
		"/Users/gaffer/git/protocol/CHANGES",
		"/Users/gaffer/git/protocol/include/Constants.h",
		"/Users/gaffer/git/protocol/include/Enums.h",
		"/Users/gaffer/git/protocol/include/Block.h",
		"/Users/gaffer/git/protocol/include/PacketFactory.h",
		"/Users/gaffer/git/protocol/include/Platform.h",
		"/Users/gaffer/git/protocol/include/StringStream.h",
		"/Users/gaffer/git/protocol/src/BitPacker.cpp",
		"/Users/gaffer/git/protocol/include/Stream.h",
		"/Users/gaffer/git/protocol/include/ReliableMessageChannel.h",
		"/Users/gaffer/git/protocol/tests/TestReliableMessageChannel.cpp",
		"/Users/gaffer/git/protocol/include/Address.h",
		"/Users/gaffer/git/protocol/tests/TestStream.cpp",
		"/Users/gaffer/git/protocol/Makefile",
		"/Users/gaffer/git/protocol/output.txt",
		"/Users/gaffer/git/protocol/obj/x64/Debug/Memory.d",
		"/Users/gaffer/git/protocol/src/Common.cpp",
		"/Users/gaffer/git/protocol/include/Server.h",
		"/Users/gaffer/git/protocol/include/Client.h",
		"/Users/gaffer/git/protocol/include/NetworkInterface.h",
		"/Users/gaffer/git/protocol/include/Packet.h",
		"/Users/gaffer/git/protocol/premake4.lua",
		"/Users/gaffer/git/protocol/include/Network.h",
		"/Users/gaffer/git/protocol/include/Connection.h",
		"/Users/gaffer/git/protocol/include/Factory.h",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestBSDSocket.d",
		"/Users/gaffer/git/protocol/tests/TestFoundation.cpp",
		"/Users/gaffer/git/protocol/include/Message.h",
		"/Users/gaffer/git/protocol/LICENCE",
		"/Users/gaffer/git/protocol/tests/Profile.cpp",
		"/Users/gaffer/git/protocol/tests/TestFactory.cpp",
		"/Users/gaffer/git/protocol/tests/TestPacketFactory.cpp",
		"/Users/gaffer/git/protocol/tests/TestSlidingWindow.cpp",
		"/Users/gaffer/git/protocol/tests/TestMessageFactory.cpp",
		"/Users/gaffer/git/protocol/include/MessageChannel.h",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestMessageFactory.d",
		"/Users/gaffer/git/protocol/include/BlockMessage.h",
		"/Users/gaffer/git/protocol/include/Channel.h",
		"/Users/gaffer/git/protocol/Protocol.sublime-project",
		"/Users/gaffer/git/protocol/protocol.make",
		"/Users/gaffer/git/protocol/src/Channel.cpp",
		"/Users/gaffer/git/protocol/tests/TestAddress.cpp",
		"/Users/gaffer/git/protocol/tests/TestDNSResolver.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestReliableMessageChannel.d",
		"/Users/gaffer/git/protocol/build/SoakTest.make",
		"/Users/gaffer/git/protocol/bin/UnitTest",
		"/Users/gaffer/git/protocol/build/Profile.make",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestBlock.d",
		"/Users/gaffer/git/protocol/include/Array.h",
		"/Users/gaffer/git/protocol/obj/x64/Debug/Server.d",
		"/Users/gaffer/git/protocol/build/UnitTest.make",
		"/Users/gaffer/git/protocol/tests/TestBitPacker.cpp",
		"/Users/gaffer/git/protocol/tests/TestResolveWrapper.cpp",
		"/Users/gaffer/git/protocol/include/ResolveWrapper.h",
		"/Users/gaffer/git/protocol/include/BitPacker.h",
		"/Users/gaffer/git/protocol/src/Network.cpp",
		"/Users/gaffer/git/protocol/NOTES",
		"/Users/gaffer/git/protocol/include/Sockets.h",
		"/Users/gaffer/git/protocol/src/Sockets.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestAddress.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestCommon.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestConnection.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestDNSResolver.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestFactory.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestFoundation.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestStream.d",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/UnitTest/TestBitPacker.d",
		"/Users/gaffer/git/protocol/src/ResolveWrapper.cpp",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/protocol/Address.d",
		"/Users/gaffer/git/protocol/build/protocol.make",
		"/Users/gaffer/git/protocol/build/obj/x64/Debug/protocol/MicroAllocator.d",
		"/Users/gaffer/git/protocol/src/BitPacket.cpp",
		"/Users/gaffer/experiments/oodle/premake4.lua",
		"/Users/gaffer/git/protocol/tests/TestBSDSockets.cpp",
		"/Users/gaffer/git/protocol/include/BSDSockets.h",
		"/Users/gaffer/git/protocol/Packets.h",
		"/Users/gaffer/git/protocol/include/ClientServerPackets.h",
		"/Users/gaffer/git/protocol/src/MicroAllocator",
		"/Users/gaffer/git/protocol/tests/SoakTest",
		"/Users/gaffer/git/protocol/include/Common2.h",
		"/Users/gaffer/git/protocol/include/Hash.h",
		"/Users/gaffer/git/protocol/tests/output.txt",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/iterator",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/iosfwd",
		"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/c++/v1/vector",
		"/Users/gaffer/git/protocol/include/Queue.h",
		"/Users/gaffer/Downloads/bitsquid-foundation-7f896236dbaf/array.h",
		"/usr/local/include/kj/threadlocal.h",
		"/Users/gaffer/git/protocol/include/Array",
		"/Users/gaffer/git/protocol/include/Queue",
		"/Users/gaffer/git/protocol/foundation/memory.h",
		"/Users/gaffer/git/protocol/foundation/memory.cpp",
		"/Users/gaffer/git/protocol/foundation/memory_types.h",
		"/Users/gaffer/git/protocol/foundation/string_stream.h",
		"/Users/gaffer/git/protocol/include/queue",
		"/Users/gaffer/git/protocol/foundation/string_stream.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"new ",
			"new",
			"new ",
			"// todo:",
			"AF_IN",
			"AF_",
			"Oodle",
			"steram",
			"Check",
			"printf",
			"ReliableMessageChannel.h",
			"NetworkSimulator",
			"new ",
			"TestChannelStructure",
			"std::string",
			"std::vector",
			"AF_",
			"AF_INET6",
			"todo:",
			"CLIENT_SERVER_PACKET_DISCONNECTED",
			"->Create",
			"ClientServerPacket",
			"Factory<Packet>",
			"new ",
			"SendPacket(",
			"SendPacket",
			"new ",
			"new",
			"printf",
			"struct ConnectPacket",
			"new",
			"delete",
			"test_network_interface",
			"todo:",
			"printf",
			"AddRef",
			"0x7f8b78c04d60",
			"Message *",
			"channelData",
			"0x7ff328c04f50",
			"0x7fb7e0c047f0",
			"AddRef",
			"m_receiveQueue->Insert",
			"0x7fe071404900",
			"messages = ",
			"AddRef(",
			"AddRef",
			"Release",
			"exit(0)",
			"printf( \"~Packet",
			"delete",
			"delete ",
			"delete packet",
			"allocate message",
			"allocate packet:",
			"printf( \"allocate packet: ",
			"new ConnectionPacket",
			"new Packet",
			"packetFactory",
			"delete pa",
			"message",
			"#if DEBUG_MEMORY",
			"#if DEBUG",
			"Factory<Packet>",
			"new ConnectionPacket",
			"allocate message",
			"allocate mesasge",
			"TestMessageFactory",
			"0x7f91eb404990",
			"new BlockMessage",
			"Factory<Message>",
			"Message<Factory>",
			"new TestMessage",
			"new BlockMessage",
			"map",
			"Release(",
			"->AddRef",
			"SendMessage(",
			"SendMesas",
			"allocate block data",
			"\"delete channel %d",
			"delete channel",
			"create message",
			"new Message",
			"releaseMessages",
			"Release",
			"DEBUG_MEMORY_LEAKS",
			"delete messages[i]",
			"ChannelData",
			"delete mess",
			"AddRef",
			"allocate message",
			"releaseMessages",
			"packetLoss",
			"m_total_allocated",
			".Allocate",
			"TempAllocator",
			"MaxHost",
			"std::string",
			"std::",
			"m_hostname[0]",
			"m_hostname",
			"new Connection",
			"std::",
			"std::string",
			"Connect(",
			"std::string",
			"TempAllocator",
			"TempAllocator256",
			"TempAllocator",
			"std::string",
			"std::vector",
			"CreateReliableMessageChannel",
			"TestChannelStructure",
			"patch up small block",
			"SendMessage",
			".Allocate",
			"allocator",
			".Connect",
			"SendMessage",
			"block;",
			"304",
			"NewBlock",
			"MaxSmallBlockSize",
			"Block",
			"NewBlock",
			"SendBlock",
			"Block.h"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "TODO",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9390,
						"regions":
						{
						},
						"selection":
						[
							[
								617,
								617
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 463.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Protocol.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"testclientserver.cpp",
				"tests/TestClientServer.cpp"
			],
			[
				"memory.cpp",
				"src/Memory.cpp"
			],
			[
				"todo",
				"TODO"
			],
			[
				"unittest.cpp",
				"tests/UnitTest.cpp"
			],
			[
				"testint",
				"tests/TestNetworkInterface.cpp"
			],
			[
				"changes",
				"CHANGES"
			],
			[
				"common.h",
				"include/Common.h"
			],
			[
				"bsdsocket.h",
				"include/BSDSocket.h"
			],
			[
				"testclient",
				"tests/TestClientServer.cpp"
			],
			[
				"testbsdsocket.cpp",
				"tests/TestBSDSocket.cpp"
			],
			[
				"bsdsocket.cpp",
				"src/BSDSocket.cpp"
			],
			[
				"dns",
				"include/DNSResolver.h"
			],
			[
				"dnsresolver.cpp",
				"src/DNSResolver.cpp"
			],
			[
				"enums.h",
				"include/Enums.h"
			],
			[
				"resolver.h",
				"include/Resolver.h"
			],
			[
				"stream.h",
				"include/Stream.h"
			],
			[
				"soaktest.cpp",
				"tests/SoakTest.cpp"
			],
			[
				"block.h",
				"include/Block.h"
			],
			[
				"reliable",
				"include/ReliableMessageChannel.h"
			],
			[
				"testrel",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"testbsd",
				"tests/TestBSDSocket.cpp"
			],
			[
				"bsd",
				"src/BSDSocket.cpp"
			],
			[
				"microallocator.cpp",
				"src/MicroAllocator.cpp"
			],
			[
				"micro",
				"include/MicroAllocator.h"
			],
			[
				"dnsresolver.h",
				"include/DNSResolver.h"
			],
			[
				"stream.cpp",
				"tests/TestStream.cpp"
			],
			[
				"testmessages.h",
				"tests/TestMessages.h"
			],
			[
				"common.cpp",
				"src/Common.cpp"
			],
			[
				"server.cpp",
				"src/Server.cpp"
			],
			[
				"server.h",
				"include/Server.h"
			],
			[
				"packetfactory.h",
				"include/PacketFactory.h"
			],
			[
				"networksimulator.cpp",
				"src/NetworkSimulator.cpp"
			],
			[
				"networksimulator.h",
				"include/NetworkSimulator.h"
			],
			[
				"interface.h",
				"include/NetworkInterface.h"
			],
			[
				"client.cpp",
				"src/Client.cpp"
			],
			[
				"client.h",
				"include/Client.h"
			],
			[
				"packets.h",
				"include/Packets.h"
			],
			[
				"testpackets.h",
				"tests/TestPackets.h"
			],
			[
				"packet.h",
				"include/Packet.h"
			],
			[
				"testbsdsocke.cpp",
				"tests/TestBSDSocket.cpp"
			],
			[
				"factory.h",
				"include/Factory.h"
			],
			[
				"testbesd",
				"tests/TestBSDSocket.cpp"
			],
			[
				"messagefactory.h",
				"include/MessageFactory.h"
			],
			[
				"testreliable",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"testreliablemessagechannel.cpp",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"simulator.cpp",
				"src/NetworkSimulator.cpp"
			],
			[
				"reliablemessagechannel.cpp",
				"src/ReliableMessageChannel.cpp"
			],
			[
				"message",
				"include/MessageFactory.h"
			],
			[
				"output.txt",
				"output.txt"
			],
			[
				"reliablemessagechannel.h",
				"include/ReliableMessageChannel.h"
			],
			[
				"slidingwindow.h",
				"include/SlidingWindow.h"
			],
			[
				"connection.cpp",
				"src/Connection.cpp"
			],
			[
				"connection.h",
				"include/Connection.h"
			],
			[
				"messag",
				"include/MessageFactory.h"
			],
			[
				"testconnection.cpp",
				"tests/TestConnection.cpp"
			],
			[
				"testr",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"testreliabl",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"testnetworkinterface.cpp",
				"tests/TestNetworkInterface.cpp"
			],
			[
				"simulator.h",
				"include/NetworkSimulator.h"
			],
			[
				"testfactory.cpp",
				"tests/TestFactory.cpp"
			],
			[
				"testmessagefactory.cpp",
				"tests/TestMessageFactory.cpp"
			],
			[
				"factoyr.h",
				"include/Factory.h"
			],
			[
				"chang",
				"CHANGES"
			],
			[
				"simulator",
				"src/NetworkSimulator.cpp"
			],
			[
				"testchannelstructure.h",
				"tests/TestChannelStructure.h"
			],
			[
				"testmessages",
				"tests/TestMessages.h"
			],
			[
				"memory.h",
				"include/Memory.h"
			],
			[
				"messagechannel",
				"src/ReliableMessageChannel.cpp"
			],
			[
				"testmessage",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"channel.h",
				"include/Channel.h"
			],
			[
				"message.h",
				"include/Message.h"
			],
			[
				"blockmessage.h",
				"include/BlockMessage.h"
			],
			[
				"testfact",
				"tests/TestFactory.cpp"
			],
			[
				"testmess",
				"tests/TestMessages.h"
			],
			[
				"testcommon.cpp",
				"tests/TestCommon.cpp"
			],
			[
				"reliabl",
				"src/ReliableMessageChannel.cpp"
			],
			[
				"blokc.h",
				"include/Block.h"
			],
			[
				"constants.h",
				"include/Constants.h"
			],
			[
				"channel.cpp",
				"src/Channel.cpp"
			],
			[
				"const",
				"include/Constants.h"
			],
			[
				"address.cpp",
				"src/Address.cpp"
			],
			[
				"address.h",
				"include/Address.h"
			],
			[
				"testaddress.cpp",
				"tests/TestAddress.cpp"
			],
			[
				"stringstream.h",
				"include/StringStream.h"
			],
			[
				"testfoundation.cpp",
				"tests/TestFoundation.cpp"
			],
			[
				"connect.cpp",
				"src/Connection.cpp"
			],
			[
				"testchannel",
				"tests/TestChannelStructure.h"
			],
			[
				"test",
				"tests/TestClientServer.cpp"
			],
			[
				"rceliabl",
				"src/ReliableMessageChannel.cpp"
			],
			[
				"channelstructure.h",
				"tests/TestChannelStructure.h"
			],
			[
				"testreliablemesasgechannel.cpp",
				"tests/TestReliableMessageChannel.cpp"
			],
			[
				"mesasgechannel.h",
				"include/MessageChannel.h"
			],
			[
				"steram.h",
				"include/Stream.h"
			],
			[
				"testblock.cpp",
				"tests/TestBlock.cpp"
			],
			[
				"tdoo",
				"TODO"
			],
			[
				"testcommon",
				"tests/TestCommon.cpp"
			],
			[
				"testresolve",
				"tests/TestDNSResolver.cpp"
			],
			[
				"testdns",
				"tests/TestDNSResolver.cpp"
			],
			[
				"dnsres",
				"src/DNSResolver.cpp"
			],
			[
				"testreso",
				"tests/TestDNSResolver.cpp"
			],
			[
				"resolver.cpp",
				"src/DNSResolver.cpp"
			],
			[
				"resolver",
				"src/DNSResolver.cpp"
			],
			[
				"testresolver.cpp",
				"tests/TestDNSResolver.cpp"
			],
			[
				"server",
				"src/Server.cpp"
			],
			[
				"server.",
				"src/Server.cpp"
			],
			[
				"res",
				"include/ResolveWrapper.h"
			],
			[
				"premake4.lua",
				"premake4.lua"
			],
			[
				"testbitpacker.cpp",
				"tests/TestBitPacker.cpp"
			],
			[
				"bitpacker.cpp",
				"src/BitPacker.cpp"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"pre",
				"premake4.lua"
			],
			[
				"network.h",
				"include/Network.h"
			],
			[
				"network.cpp",
				"src/Network.cpp"
			],
			[
				"newo",
				"include/Network.h"
			],
			[
				"sockets.h",
				"include/Sockets.h"
			],
			[
				"testres",
				"tests/TestResolveWrapper.cpp"
			],
			[
				"testnetwor",
				"tests/TestNetworkInterface.cpp"
			],
			[
				"testsliding",
				"tests/TestSlidingWindow.cpp"
			],
			[
				"teststream.cpp",
				"tests/TestStream.cpp"
			],
			[
				"testbit",
				"tests/TestBitPacker.cpp"
			],
			[
				"soaktest",
				"tests/SoakTest.cpp"
			],
			[
				"resolvewrapper.cpp",
				"src/ResolveWrapper.cpp"
			],
			[
				"resolvewrapper.h",
				"include/ResolveWrapper.h"
			],
			[
				"memory.cp",
				"src/Memory.cpp"
			],
			[
				"reso",
				"include/Resolver.h"
			],
			[
				"sockets.cpp",
				"src/Sockets.cpp"
			],
			[
				"socket",
				"src/Sockets.cpp"
			],
			[
				"socket.cpp",
				"src/BSDSocket.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 404.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
